{{- if .Values.cerberus.enabled -}}
{{- $root := . -}}
{{- $appName := include "startx.appName" . -}}
{{- $namespace := .Values.cerberus_project.project.name -}}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cerberus
  namespace: "{{- $namespace -}}"
  labels:
    app.kubernetes.io/name: "cerberus-deployment"
    {{- include "example-chaos.labels" $root | nindent 4 }}
    tool: cerberus
  annotations:
    {{- include "example-chaos.annotations" $root | nindent 4 }}
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 5
  selector:
    matchLabels:
      app: cerberus
      tool: cerberus
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: cerberus
        tool: cerberus
    spec:
      containers:
      - name: cerberus
        image: quay.io/chaos-kubox/cerberus
        imagePullPolicy: Always
        args:
          - python3 start_cerberus.py -c config/config.yaml
        command:
          - /bin/sh
          - -c
        ports:
        - containerPort: 8080
          protocol: TCP
        resources: {}
        securityContext:
          privileged: true
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /root/kubeconfig
          name: cerberus-kubeconfig
          subPath: config
        - mountPath: /root/cerberus/config
          name: cerberus-config
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      serviceAccount: cerberus
      terminationGracePeriodSeconds: 10
      volumes:
      - configMap:
          defaultMode: 420
          name: cerberus-kubeconfig
        name: cerberus-kubeconfig
      - configMap:
          defaultMode: 420
          name: cerberus-config
        name: cerberus-config
{{- end -}}
