# Default values for configuration of a STARTX cluster
# see values.yaml for explanation on each params
context: &context
  scope: startx
  cluster: localhost
  environment: infra
  component: 3scale
  app: startx-3scale
manager:
  enabled: true
  hooked: false
rhn:
  enabled: true
  user: startx_rhnuser
  pwd: startx_rhnpwd
project: 
  enabled: false
  context: 
    <<: *context
  project: 
    enabled: true
    hooked: false
    type: project
    name: startx-3scale
    display_name: "Startx 3SCALE"
    requester: startx
    description: 3Scale enterprise api-management & control plane configured by STARTX
  rbac: 
    enabled: true
    groups: 
    - id: dev
      name: dev
      role: basic-user
    - id: devops
      name: devops
      role: admin
    - id: ops
      name: ops
      role: admin
  networkpolicy: 
    enabled: true
    rules: 
    - id: allow-from-openshift-ingress
      spec: |
        podSelector:
          matchLabels:
            app: startx-3scale
        ingress:
          - from:
              - namespaceSelector: {}
  limits: 
    enabled: true
    rules:  |
      limits:
        - type: "Pod"
          min:
            cpu: 50m
            memory: 32Mi
          max:
            cpu: "10"
            memory: 34Gi
        - type: "Container"
          default:
            cpu: 400m
            memory: 512Mi
          defaultRequest:
            cpu: 100m
            memory: 128Mi
          min:
            cpu: 50m
            memory: 32Mi
          max:
            cpu: "10"
            memory: 32Gi
  quotas: 
    enabled: true
    rules:  |
      hard:
        limits.cpu: "25"
        limits.memory: "120Gi"
        requests.cpu: "6"
        requests.memory: "10000Mi"
        requests.storage: "30Gi"
        persistentvolumeclaims: "10"
        ephemeral-storage: "0" 
        gp2.storageclass.storage.k8s.io/requests.storage: "20Gi"
        gp2.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
        aws-generic-retain.storageclass.storage.k8s.io/requests.storage: "0"
        aws-generic-retain.storageclass.storage.k8s.io/persistentvolumeclaims: "0"
        aws-generic-delete.storageclass.storage.k8s.io/requests.storage: "0"
        aws-generic-delete.storageclass.storage.k8s.io/persistentvolumeclaims: "0"
        aws-fast-retain.storageclass.storage.k8s.io/requests.storage: "0"
        aws-fast-retain.storageclass.storage.k8s.io/persistentvolumeclaims: "0"
        aws-fast-delete.storageclass.storage.k8s.io/requests.storage: "0"
        aws-fast-delete.storageclass.storage.k8s.io/persistentvolumeclaims: "0"
        aws-slow-retain.storageclass.storage.k8s.io/requests.storage: "0"
        aws-slow-retain.storageclass.storage.k8s.io/persistentvolumeclaims: "0"
        aws-slow-delete.storageclass.storage.k8s.io/requests.storage: "0"
        aws-slow-delete.storageclass.storage.k8s.io/persistentvolumeclaims: "0"
        ocs-generic-delete.storageclass.storage.k8s.io/requests.storage: "0"
        ocs-generic-delete.storageclass.storage.k8s.io/persistentvolumeclaims: "0"
        ocs-generic-retain.storageclass.storage.k8s.io/requests.storage: "0"
        ocs-generic-retain.storageclass.storage.k8s.io/persistentvolumeclaims: "0"
        ocs-fs-delete.storageclass.storage.k8s.io/requests.storage: "0"
        ocs-fs-delete.storageclass.storage.k8s.io/persistentvolumeclaims: "0"
        ocs-fs-retain.storageclass.storage.k8s.io/requests.storage: "2Gi"
        ocs-fs-retain.storageclass.storage.k8s.io/persistentvolumeclaims: "2"
        ocs-storagecluster-ceph-rbd.storageclass.storage.k8s.io/requests.storage: "0"
        ocs-storagecluster-ceph-rbd.storageclass.storage.k8s.io/persistentvolumeclaims: "0"
        openshift-storage.noobaa.io.storageclass.storage.k8s.io/requests.storage: "0"
        openshift-storage.noobaa.io.storageclass.storage.k8s.io/persistentvolumeclaims: "0"
        pods: "25"
        services: "20"
        services.loadbalancers: "0"
        services.nodeports: "0"
        secrets: "50"
        configmaps: "16"
        replicationcontrollers: "30"
        openshift.io/imagestreams: "25"
        count/daemonsets.apps: "0"
        count/replicasets.apps: "6"
        count/deployments.apps: "2"
operator:
  enabled: false
  context: 
    <<: *context
  subscription:
    enabled: true
    hooked: false
    name: "3scale-operator"
    namespace: "startx-3scale"
    version: "v0.6.1"
    operator: 
      channel: threescale-2.9
      name: 3scale-operator
      csv: 3scale-operator
      source: 
        name: redhat-operators
        namespace: openshift-marketplace
  operatorGroup:
    enabled: true
    hooked: false
    name: "3scale-operator"
    namespace: "startx-3scale"
    providedAPIs: "APIManager.v1alpha1.apps.3scale.net,APIManagerBackup.v1alpha1.apps.3scale.net,APIManagerRestore.v1alpha1.apps.3scale.net,Backend.v1beta1.capabilities.3scale.net,Product.v1beta1.capabilities.3scale.net,Tenant.v1alpha1.capabilities.3scale.net"
