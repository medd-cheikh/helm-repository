# Default values for cluster-gpu.

# Application deployment context
context:  &context
  # Name of the global scope for this application (organisational tenant)
  scope: myscope
  # Name of the cluster running this application (plateform tenant)
  cluster: default
  # Name of the environement for this application (ex: dev, factory, preprod or prod)
  environment: myenv
  # Component name of this application (logical tenant)
  component: mycomponent
  # Application name (functionnal tenant, default use Chart name)
  app: default-gpu
  # Version name of this application (default use Chart appVersion)
  # version: "0.0.3"

# Deploy a certificate
gpu:
  # Enable creation of certificates
  enabled: false
  # List of certificate resource to deploy
  list:
      # name of the certificate
    - name: example-manual-demo-gpu
      # namespace of the certificate (default is project namespace)
      namespace: demo-gpu
      # kind of certificate (manual or ingress)
      kind: manual
      # Properties for a manual kind
      manual: 
        # spec of the certificate
        spec: |-
          commonName: example-manual-demo-gpu.example.com
          dnsNames:
          - example-manual-demo-gpu.example.com
          issuerRef:
            kind: ClusterIssuer
            name: letsencrypt-demo
          secretName: example-manual-demo-gpu-tls
      # name of the certificate
    - name: example-ingress-demo-gpu
      # namespace of the certificate (default is project namespace)
      namespace: demo-gpu
      # kind of certificate (manual or ingress)
      kind: ingress
      # Properties for a ingress kind
      ingress: 
        # Hostname for the certificate
        host: example-demo-gpu.example.com
        # Issuer of the certificate
        issuer: letsencrypt-demo
        # The service name used to expose application
        serviceName: example
        # Service port number where ingress should route traffic to
        servicePort: 8080
# Create a gpu Issuer
clusterIssuer: 
  # Enable creation of clusterIssuers
  enabled: false
  # List of clusterIssuer resource to deploy
  list:
      # name of the clusterIssuer
    - name: letsencrypt-demo
      # namespace of the clusterIssuer (default is project namespace)
      namespace: openshift-gpu
      # spec of the clusterIssuer
      spec: |-
        acme:
        email: myemail@corp.com
        preferredChain: ""
        privateKeySecretRef:
          name: letsencrypt-demo-cert
        server: https://demo-letsencrypt-demo.api.letsencrypt.org/directory
        solvers:
        - http01:
            ingress:
              class: openshift-default


# Configuration of the project (see https://helm-repository.readthedocs.io/en/latest/charts/project)
project: 
  enabled: false
  context: 
    <<: *context
  project: 
    enabled: false
    hooked: false
    type: namespace
    name: "openshift-gpu-nvidia-operator"
    display_name: Operator GPU-NVidia
    description: GPU-NVidia configured by STARTX

# Configuration of the operator (see https://helm-repository.readthedocs.io/en/latest/charts/operator)
operator:
  enabled: false
  context: 
    <<: *context
  subscription:
    enabled: true
    hooked: false
    name: "openshift-gpu-nvidia-operator"
    namespace: "openshift-gpu-nvidia-operator"
    version: "v1.12.1"
    operator: 
      channel: "stable-v1"
      name: openshift-gpu-nvidia-operator
      installPlanApproval: Automatic
      # csv: openshift-gpu-nvidia
      source: 
        name: redhat-operators
        namespace: openshift-marketplace
  operatorGroup:
    enabled: false
    hooked: false
    name: "openshift-gpu-nvidia-operator"
    namespace: "openshift-gpu-nvidia-operator"
    providedAPIs: "Certificate.v1.gpu-nvidia.io,CertificateRequest.v1.gpu-nvidia.io,Challenge.v1.acme.gpu-nvidia.io,ClusterIssuer.v1.gpu-nvidia.io"

