{{- if .Values.quay.enabled -}}
{{- $root := . -}}
{{- $namespace := .Values.project.project.name | default "default-quay" -}}
kind: QuayEcosystem
apiVersion: redhatcop.redhat.io/v1alpha1
metadata:
  name: "{{- include "startx.appName" . -}}"
  namespace: "{{- $namespace -}}"
  labels:
    {{- include "cluster-quay.labels" . | nindent 4 }}
    app.kubernetes.io/name: "{{- include "startx.appName" . -}}-quayecosystem"
  annotations:
    {{- include "cluster-quay.annotations" . | nindent 4 }}
spec:
  quay:
    skipSetup: false
    keepConfigDeployment: true
    deploymentStrategy: RollingUpdate
{{- with .Values.quay.image }}
    image: "{{- . -}}"
{{- end }}
{{- if .Values.quay.pullSecretEnabled }}
    imagePullSecretName: "{{- include "startx.appName" . -}}-pull-auth"
{{- end }}
{{- if .Values.quay.admin }}
    superuserCredentialsSecretName: "{{- include "startx.appName" . -}}-adminuser"
{{- end }}
    migrationPhase: new-installation
    repoMirrorResources: {}
    resources:
      limits:
        cpu: "1"
        memory: 4096Mi
      requests:
        cpu: 400m
        memory: 2048Mi
    readinessProbe:
      failureThreshold: 3
      httpGet:
        path: /health/instance
        port: 8443
        scheme: HTTPS
      initialDelaySeconds: 5
    externalAccessType: Route
    livenessProbe:
      failureThreshold: 3
      httpGet:
        path: /health/instance
        port: 8443
        scheme: HTTPS
      initialDelaySeconds: 90
      timeoutSeconds: 5
    registryBackends:
      - name: default
        local:
          storagePath: /datastorage/registry
    registryStorage:
      persistentVolumeAccessModes:
        - {{ .Values.quay.storageAccess | default "ReadWriteOnce" | quote }}
      persistentVolumeSize: {{ .Values.quay.size | default "10Gi" | quote }}
      persistentVolumeStorageClassName: {{ .Values.quay.storageClass | default "gp2" | quote  }}
{{- if .Values.quay.db }}
    database:
      deploymentStrategy: RollingUpdate
      {{- with .Values.quay.db.image }}
      image: "{{- . -}}"
      {{- end }}
      {{- with .Values.quay.db.creds }}
      credentialsSecretName: "{{- include "startx.appName" $root -}}-dbuser"
      {{- end }}
      volumeSize: {{ .Values.quay.db.size | default "2Gi"  | quote }}
      livenessProbe:
        exec:
          command:
            - /usr/libexec/check-container
            - '--live'
        failureThreshold: 3
        initialDelaySeconds: 90
        timeoutSeconds: 10
      readinessProbe:
        exec:
          command:
            - /usr/libexec/check-container
        failureThreshold: 3
        initialDelaySeconds: 8
        timeoutSeconds: 1
      resources:
        limits:
          cpu: "400m"
          memory: 512Mi
        requests:
          cpu: 50m
          memory: 128Mi
{{- end }}
{{ if .Values.quay.clair }}{{- if .Values.quay.clair.enabled -}}
  clair:
    enabled: {{- .Values.quay.clair.enabled -}}
    deploymentStrategy: RollingUpdate
    {{- with .Values.quay.clair.image }}
    image: "{{- . -}}"
    {{- end }}
    {{- if .Values.quay.pullSecretEnabled }}
    imagePullSecretName: "{{- include "startx.appName" . -}}-pull-auth"
    {{- end }}
    livenessProbe:
      failureThreshold: 3
      httpGet:
        path: /health
        port: 6061
        scheme: HTTP
      initialDelaySeconds: 20
      timeoutSeconds: 5
    readinessProbe:
      failureThreshold: 3
      httpGet:
        path: /health
        port: 6061
        scheme: HTTP
      initialDelaySeconds: 8
      timeoutSeconds: 5
    resources:
      limits:
        cpu: 400m
        memory: 512Mi
      requests:
        cpu: 100m
        memory: 256Mi
{{- if .Values.quay.db }}
    database:
      deploymentStrategy: RollingUpdate
      {{- with .Values.quay.db.image }}
      image: "{{- . -}}"
      {{- end }}
      volumeSize: {{ .Values.quay.db.size | default "2Gi" | quote }}
      livenessProbe:
        exec:
          command:
            - /usr/libexec/check-container
            - '--live'
        failureThreshold: 3
        initialDelaySeconds: 90
        timeoutSeconds: 10
      readinessProbe:
        exec:
          command:
            - /usr/libexec/check-container
        failureThreshold: 3
        initialDelaySeconds: 8
        timeoutSeconds: 1
      resources:
        limits:
          cpu: "400m"
          memory: 512Mi
        requests:
          cpu: 50m
          memory: 128Mi
{{- end }}
{{- end -}}{{ end }}
{{- if .Values.quay.redis -}}{{- if .Values.quay.redis.enabled -}}
  redis:
    deploymentStrategy: RollingUpdate
    {{- with .Values.quay.redis.image }}
    image: "{{- . -}}"
    {{- end }}
    {{- with .Values.quay.redis.creds }}
    credentialsSecretName: "{{- include "startx.appName" $root -}}-redisuser"
    {{- end }}
    readinessProbe:
      failureThreshold: 3
      initialDelaySeconds: 20
      tcpSocket:
        port: 6379
    resources:
      limits:
        cpu: "200m"
        memory: 512Mi
      requests:
        cpu: 50m
        memory: 64Mi
{{- end -}}{{- end -}}
{{- end -}}