{{- if .Values.kKafka }}{{- if .Values.kKafka.enabled }}
{{- $root := . -}}
{{- $namespace := .Values.projectKEventing.project.name | default "default-knative" -}}
apiVersion: operator.serverless.openshift.io/v1alpha1
kind: KnativeKafka
metadata:
  name: {{ .Values.kKafka.name | default "knative-kafka" | quote }}
  namespace: "{{- $namespace -}}"
  labels:
    {{- include "cluster-knative.labels" . | nindent 4 }}
    app.kubernetes.io/name: "{{ .Values.kKafka.name | default "knative-kafka" }}-knativekafka"
  annotations:
    {{- include "cluster-knative.annotations" . | nindent 4 }}
    {{- if .Values.kKafka.hooked }}
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-weight: "8"
    helm.sh/hook-delete-policy: hook-failed
    argocd.argoproj.io/hook: PostSync
    argocd.argoproj.io/hook-delete-policy: HookFailed
    {{- end }}
    argocd.argoproj.io/sync-wave: "8"
spec:
  broker:
    defaultConfig:
      authSecretName: ''
      bootstrapServers: REPLACE_WITH_COMMA_SEPARATED_KAFKA_BOOTSTRAP_SERVERS
      numPartitions: 10
      replicationFactor: 3
    enabled: false
  channel:
    authSecretName: ''
    authSecretNamespace: ''
    bootstrapServers: REPLACE_WITH_COMMA_SEPARATED_KAFKA_BOOTSTRAP_SERVERS
    enabled: false
  high-availability:
    replicas: 1
  logging:
    level: INFO
  sink:
    enabled: false
  source:
    enabled: false
{{- end }}{{- end }}
