apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "startx.appName" . }}
  labels:
    app.kubernetes.io/name: "{{- include "startx.appName" . -}}-{{- include "startx.appVersion" . -}}-deployment"
    {{- include "example-html.labels" . | nindent 4 }}
  annotations:
    {{- include "example-html.annotations" . | nindent 4 }}
    checksum/config: {{ include (print $.Template.BasePath "/cm-lib.yaml") . | sha256sum }}
    argocd.argoproj.io/sync-wave: "30"
spec:
  replicas: {{ .Values.html.replicas  }}
  selector:
    matchLabels:
      app: {{ include "startx.appName" . }}
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: "{{ include "startx.appName" . }}-{{ include "startx.appVersion" . }}-pod"
        {{- include "example-html.labels" . | nindent 8 }}
        app: {{ include "startx.appName" . }}
      annotations:
        {{- include "example-html.annotations" . | nindent 8 }}
    spec: 
      containers:
        - name: application
          image: "quay.io/startx/apache:{{- .Values.html.version | default "alpine3" }}"
          command:
            - "/bin/sx-apache"
          args:
            - run
          env:
            - name: SX_DEBUG
              value: "{{- .Values.html.debug }}"
            - name: SX_VERBOSE
              value: "true"
          envFrom:
            - configMapRef:
                name: {{ include "startx.appName" . }}-app
          ports:
            - containerPort: 8080
              protocol: TCP
          livenessProbe:
            exec:
              command:
                - "/bin/sx-apache"
                - isLive
            initialDelaySeconds: 1
            timeoutSeconds: 3
            periodSeconds: 15
            successThreshold: 1
            failureThreshold: 2
          readinessProbe:
            exec:
              command:
                - "/bin/sx-apache"
                - isReady
            initialDelaySeconds: 2
            timeoutSeconds: 3
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 2
          resources:
            limits:
              cpu: 200m
              memory: 64Mi
            requests:
              cpu: 10m
              memory: 32Mi
          terminationMessagePath: "/dev/termination-log"
          imagePullPolicy: Always
          volumeMounts:
            - name: "html-deploy-log"
              mountPath: "/var/log/httpd"
            - name: html-deploy-conf
              mountPath: "/app"
              readOnly: true
      volumes:
        - name: "html-deploy-log"
          emptyDir:
            medium: ""
        - name: html-deploy-conf
          configMap:
            name: "{{ include "startx.appName" . }}-lib"
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext: {}
