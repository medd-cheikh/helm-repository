{{- if .Values.acs.enabled }}{{- if .Values.acs.central }}{{- if .Values.acs.central.enabled }}
{{- $root := . -}}
{{- $namespace := .Values.project.project.name | default "open-security-management" -}}
apiVersion: platform.stackrox.io/v1alpha1
kind: Central
metadata:
  name: {{ .Values.acs.central.name | default "default" | quote }}
  namespace: "{{- $namespace -}}"
  labels:
    {{- include "cluster-acs.labels" . | nindent 4 }}
    app.kubernetes.io/name: "{{ .Values.acs.central.name | default "default" }}-central"
  annotations:
    {{- include "cluster-acs.annotations" . | nindent 4 }}
    {{- if .Values.acs.central.hooked }}
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-weight: "10"
    helm.sh/hook-delete-policy: hook-failed
    argocd.argoproj.io/hook: PostSync
    argocd.argoproj.io/hook-delete-policy: HookFailed
    {{- end }}
    argocd.argoproj.io/sync-wave: "0"
spec:
  central:
    exposure:
      loadBalancer:
        enabled: false
        port: 443
      nodePort:
        enabled: false
      route:
        enabled: true
    persistence:
      persistentVolumeClaim:
        claimName: stackrox-db
    {{- if .Values.acs.infra }}
    nodeSelector:
      node-role.kubernetes.io/infra: ''
    tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/infra
        operator: Exists
    {{- end }}
  egress:
    connectivityPolicy: Online
  scanner:
  {{- if .Values.acs.infra }}
    nodeSelector:
      node-role.kubernetes.io/infra: ''
    tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/infra
        operator: Exists  
  {{- end }}
  {{- if .Values.acs.scanner.enabled }}
    analyzer:
      scaling:
        autoScaling: Enabled
        maxReplicas: 5
        minReplicas: 2
        replicas: 3
    scannerComponent: Enabled
  {{- else }}
    scannerComponent: Disabled
  {{- end }}

{{- end }}{{- end }}{{- end }}
