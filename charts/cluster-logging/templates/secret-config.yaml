{{- if .Values.logging.enabled }}{{- if .Values.logging.infra_enabled }}
{{- $root := . -}}
{{- $namespace := "openshift-monitoring" -}}
apiVersion: v1
kind: ConfigMap
metadata:
  name: "cluster-monitoring-config"
  namespace: "{{- $namespace -}}"
  labels:
    {{- include "cluster-logging.labels" . | nindent 4 }}
    app.kubernetes.io/name: "{{ .Values.logging.name | default "instance" }}-clusterlogging"
  annotations:
    {{- include "cluster-logging.annotations" . | nindent 4 }}
    {{- if .Values.logging.hooked }}
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-weight: "10"
    helm.sh/hook-delete-policy: hook-failed
    argocd.argoproj.io/hook: PostSync
    argocd.argoproj.io/hook-delete-policy: HookFailed
    {{- end }}
    argocd.argoproj.io/sync-wave: "2"
data:
  config.yaml: |+
    alertmanagerMain:
      nodeSelector:
        node-role.kubernetes.io/infra: ""
    prometheusK8s:
      nodeSelector:
        node-role.kubernetes.io/infra: ""
    prometheusOperator:
      nodeSelector:
        node-role.kubernetes.io/infra: ""
    grafana:
      nodeSelector:
        node-role.kubernetes.io/infra: ""
    k8sPrometheusAdapter:
      nodeSelector:
        node-role.kubernetes.io/infra: ""
    kubeStateMetrics:
      nodeSelector:
        node-role.kubernetes.io/infra: ""
    telemeterClient:
      nodeSelector:
        node-role.kubernetes.io/infra: ""
    openshiftStateMetrics:
      nodeSelector:
        node-role.kubernetes.io/infra: ""
    thanosQuerier:
      nodeSelector:
        node-role.kubernetes.io/infra: ""
{{- end }}{{- end }}
