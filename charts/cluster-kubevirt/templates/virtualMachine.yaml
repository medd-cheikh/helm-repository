{{- if .Values.vms }}{{- if .Values.vms.enabled }}
{{- $root := . -}}
{{- $defaultns := .Values.project.project.name -}}
{{ range .Values.vms.list }}
{{- $name := .name | default "default-vm" -}}
{{- $cloudInit := .cloudInit | default "name: default\nhostname: {{- $name -}}" -}}
{{- $hostname := .hostname | default "{{- $name -}}.local" -}}
{{- $namespace := .namespace | default $defaultns -}}
{{- $os_signature := .os.signature | default "centos7.0" -}}
{{- $os_name := .os.name | default $os_signature -}}
{{- $disk_boot_type := .storage.boot_type | default "dataVolume" -}}
{{- $disk_boot_image := .storage.boot_image | default "https://cloud.centos.org/centos/7/images/CentOS-7-x86_64-GenericCloud-1907.qcow2" -}}
{{- $disk_boot_size := .storage.boot_size | default "10Go" -}}
{{- $disk_boot_storageclass := .storage.boot_storageclass | default "gp2" -}}
---
kind: VirtualMachine
apiVersion: kubevirt.io/v1alpha3
metadata:
  name: {{ $name | quote }}
  namespace: {{ $namespace | quote }}
  labels:
    {{- include "cluster-kubevirt.labels" $root | nindent 4 }}
    app.kubernetes.io/name: "{{- $name -}}-virtualmachine"
    flavor.template.kubevirt.io/medium: 'true'
    os.template.kubevirt.io/{{ $os_signature }}: 'true'
    # vm.kubevirt.io/template: medium-centos7-server
    # vm.kubevirt.io/template-namespace: {{ $namespace | quote }}
    # vm.kubevirt.io/template.revision: '1'
    # vm.kubevirt.io/template.version: v0.8.2
    workload.template.kubevirt.io/server: 'true'
  annotations:
    {{- include "cluster-kubevirt.annotations" $root | nindent 4 }}
    argocd.argoproj.io/sync-wave: "50"
    kubevirt.io/latest-observed-api-version: v1alpha3
    kubevirt.io/storage-observed-api-version: v1alpha3
    name.os.template.kubevirt.io/{{ $os_signature }}: {{ $os_name | quote }}
  finalizers:
    - k8s.v1.cni.cncf.io/kubeMacPool
spec:
  dataVolumeTemplates:
    {{- if eq $disk_boot_type "dataVolume" }}
    - metadata:
        name: "{{- $name -}}-rootdisk"
      spec:
        pvc:
          storageClassName: {{ $disk_boot_storageclass | quote }}
          volumeMode: Filesystem
          accessModes:
            - ReadWriteOnce
          dataSource: null
          resources:
            requests:
              storage: {{ $disk_boot_size }}
        source:
          http:
            url: >-
              {{- $disk_boot_image | nindent 14 }}
      status: {}
    {{- end }}
    {{ range .storage.disks }}
    {{- $disk_name := .name | default "disk0" -}}
    {{- $disk_storageclass := .storageclass | default "gp2" -}}
    {{- $disk_size := .size | default "2Go" -}}
    - metadata:
        name: "{{- $name -}}-{{- $disk_name -}}"
      spec:
        pvc:
          storageClassName: {{ $disk_storageclass | quote }}
          volumeMode: Filesystem
          accessModes:
            - ReadWriteOnce
          dataSource: null
          resources:
            requests:
              storage: {{ $disk_size }}
        source:
          blank: {}
      status: {}
    {{- end }}
  running: true
  template:
    metadata:
      labels:
        {{- include "cluster-kubevirt.labels" $root | nindent 8 }}
        app.kubernetes.io/name: "{{- $name -}}-vminstance"
        app.kubernetes.io/part-of: "{{- $name -}}"
        kubevirt.io/domain: "{{- $name -}}"
        kubevirt.io/size: medium
        vm.kubevirt.io/name: "{{- $name -}}"
      annotations:
        {{- include "cluster-kubevirt.annotations" $root | nindent 8 }}
    spec:
      hostname: {{ $hostname | quote }}
      evictionStrategy: LiveMigrate
      domain:
        machine:
          type: ''
        resources:
          requests:
            memory: 1Gi
        cpu:
          cores: 1
          sockets: 1
          threads: 1
        devices:
          disks:
            - name: rootdisk
              bootOrder: 1
              disk:
                bus: virtio
            {{ range .storage.disks }}
            {{- $disk_name := .name | default "disk0" -}}
            {{- $boot_order := .boot_order | default 3 -}}
            - name: {{ $disk_name | quote }}
              bootOrder: {{ $boot_order }}
              disk:
                bus: virtio
            {{ end -}}
            - name: cloudinitdisk
              bootOrder: 10
              disk:
                bus: virtio
          interfaces:
            - name: nic0
              bootOrder: 2
              masquerade: {}
              model: virtio
          networkInterfaceMultiqueue: true
          rng: {}
      networks:
        - name: nic0
          pod: {}
      volumes:
        {{- if eq $disk_boot_type "dataVolume" }}
        - name: rootdisk
          dataVolume:
            name: "{{- $name -}}-rootdisk"
        {{- else }}
        - name: rootdisk
          containerDisk:
            image: {{- $disk_boot_image | quote }}
        {{- end }}
        {{ range .storage.disks }}
        {{- $disk_name := .name | default "disk0" -}}
        - name: "{{- $disk_name -}}"
          dataVolume:
            name: "{{- $name -}}-{{- $disk_name -}}"
        {{ end -}}
        - name: cloudinitdisk
          cloudInitNoCloud:
            userData: |
              {{- $cloudInit | nindent 14 }}
      terminationGracePeriodSeconds: 0
{{ end }}
{{- end }}{{- end }}
