{{- if .Values.demo }}{{- if .Values.demo.sxapi_knative }}{{- if .Values.demo.sxapi_knative.enabled -}}
{{- $root := . -}}
{{- with .Values.demo.sxapi_knative -}}
{{- $namespace := .namespace | default "demo-sxapi" -}}
{{- $scope := .scope | default $root.Values.context.scope -}}
{{- $cluster := .cluster | default $root.Values.context.cluster -}}
{{- $env := .environment | default $root.Values.context.environment -}}
{{- $component := .component | default $root.Values.context.component -}}
{{- $version := .version | default $root.Values.context.version -}}
{{- $randrun := printf "%s%s" "a" (randAlphaNum 8 | lower | nospace) -}}

---
kind: ConfigMap
apiVersion: v1
metadata: 
  name: "{{- $namespace -}}-config"
  namespace: {{ $namespace | quote }}
  annotations:
    {{- include "example-catalog.annotations" $root | nindent 4 }}
  labels:
    {{- include "example-catalog.labels" $root | nindent 4 }}
    app.kubernetes.io/name: "{{- $namespace -}}-config-configmap"
data:
  SX_ID: "{{- $scope -}}-{{- $component -}}-{{- $env -}}/app"
  SX_TYPE: app
  SX_COMPONENT: "{{- $component -}}"
  SX_NAME: Startx {{- $component -}} application
  SX_SUMMARY: Startx {{- $component -}} application based on apache container
  SX_VERSION: "{{- $env -}}"
  SX_VERBOSE: "true"
  SX_DEBUG: "true"
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: "{{- $namespace -}}-lib-latest"
  namespace: {{ $namespace | quote }}
  annotations:
    {{- include "example-catalog.annotations" $root | nindent 4 }}
  labels:
    {{- include "example-catalog.labels" $root | nindent 4 }}
    app.kubernetes.io/name: "{{- $namespace -}}-lib-latest-configmap"
data:
  sxapi.yml: |-
    name: sxapi-example
    description: sxapi example
    version: "0.0.1"
    debug: true
    resources:
      serviceinfo-sample:
        _class: serviceinfo
    log:
      filters:
        level: '0,1,2,3,4'
        type: debug,info,error,warn
    server:
      port: '8080'
      endpoints:
      - path: "/"
        desc: Display welcome message (HTML)
        body: |-
            <html>
            <head><title>Application \{\{name\}\}</title></head>
            <link rel="stylesheet" href="https://goo.gl/4kFNLH">
            <body><div class="container">
            <h1><span class="glyphicon glyphicon-eye-open"></span> Your API \{\{name\}\} is
            live !</h1>
            <div class="alert alert-success" role="alert"><p>This API is \{\{description\}\}
            running on <b>\{\{hostname\}\}</b> with current release <b>v\{\{version\}\}</b></p></div>
            <div class="alert alert-info" role="alert"><p>The application signature is <b>\{\{appsign\}\}</b>
            and corespond to the example API using micro-service framework <b>\{\{package.name\}\}
            v\{\{package.version\}\}</b>.</p></div>
            <h1>Demo de deploiement serverless</h1>
            <nav class="navbar navbar-default navbar-fixed-bottom"><div class="container">
            Microservice engine is <b>\{\{package.name\}\} v\{\{package.version\}\}</b>. \{\{package.description\}\}</div></nav>
            </div></body>
            </html>
      - path: "/health"
        resource: serviceinfo-sample
        endpoint: health
      - path: "/info"
        resource: serviceinfo-sample
        endpoint: info
      - path: "/ping"
        desc: Ping the application. Return a sample message in json
        code: '200'
        body: pong
    bot:
      lib: "/conf/mylib"
      cron:
      - id: test-cront-task
        name: Execute test cron task
        schedule: "*/1 * * * *"
        task: myCronFunction
  mylib.js: |-
    /* global $log, module */

    //'use strict';

    var mylib = {
      myCronFunction: function (config) {
        var moment = require('moment');
        $log.info("cron task " + config.id + " executed at " + moment().format('YYYY-MM-DD HH:mm:ss'));
      }
    };

    module.exports = mylib;
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: "{{- $namespace -}}-lib-v1"
  namespace: {{ $namespace | quote }}
  annotations:
    {{- include "example-catalog.annotations" $root | nindent 4 }}
  labels:
    {{- include "example-catalog.labels" $root | nindent 4 }}
    app.kubernetes.io/name: "{{- $namespace -}}-lib-v1-configmap"
data:
  sxapi.yml: |-
    name: sxapi-example
    description: sxapi example
    version: "0.0.1"
    debug: true
    resources:
      serviceinfo-sample:
        _class: serviceinfo
    log:
      filters:
        level: '0,1,2,3,4'
        type: debug,info,error,warn
    server:
      port: '8080'
      endpoints:
      - path: "/"
        desc: Display welcome message (HTML)
        body: |-
            <html>
            <head><title>Application \{\{name\}\}</title></head>
            <link rel="stylesheet" href="https://goo.gl/4kFNLH">
            <body><div class="container">
            <h1><span class="glyphicon glyphicon-eye-open"></span> Your API \{\{name\}\} is
            live !</h1>
            <div class="alert alert-success" role="alert"><p>This API is \{\{description\}\}
            running on <b>\{\{hostname\}\}</b> with current release <b>v\{\{version\}\}</b></p></div>
            <div class="alert alert-info" role="alert"><p>The application signature is <b>\{\{appsign\}\}</b>
            and corespond to the example API using micro-service framework <b>\{\{package.name\}\}
            v\{\{package.version\}\}</b>.</p></div>
            <h1>Demo de deploiement serverless</h1>
            <nav class="navbar navbar-default navbar-fixed-bottom"><div class="container">
            Microservice engine is <b>\{\{package.name\}\} v\{\{package.version\}\}</b>. \{\{package.description\}\}</div></nav>
            </div></body>
            </html>
      - path: "/health"
        resource: serviceinfo-sample
        endpoint: health
      - path: "/info"
        resource: serviceinfo-sample
        endpoint: info
      - path: "/ping"
        desc: Ping the application. Return a sample message in json
        code: '200'
        body: pong
    bot:
      lib: "/conf/mylib"
      cron:
      - id: test-cront-task
        name: Execute test cron task
        schedule: "*/1 * * * *"
        task: myCronFunction
  mylib.js: |-
    /* global $log, module */

    //'use strict';

    var mylib = {
      myCronFunction: function (config) {
        var moment = require('moment');
        $log.info("cron task " + config.id + " executed at " + moment().format('YYYY-MM-DD HH:mm:ss'));
      }
    };

    module.exports = mylib;
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: "{{- $namespace -}}-lib-v2"
  namespace: {{ $namespace | quote }}
  annotations:
    {{- include "example-catalog.annotations" $root | nindent 4 }}
  labels:
    {{- include "example-catalog.labels" $root | nindent 4 }}
    app.kubernetes.io/name: "{{- $namespace -}}-lib-v2-configmap"
data:
  sxapi.yml: |-
    name: sxapi-example
    description: sxapi example
    version: "0.0.1"
    debug: true
    resources:
      serviceinfo-sample:
        _class: serviceinfo
    log:
      filters:
        level: '0,1,2,3,4'
        type: debug,info,error,warn
    server:
      port: '8080'
      endpoints:
      - path: "/"
        desc: Display welcome message (HTML)
        body: |-
            <html>
            <head><title>Application \{\{name\}\}</title></head>
            <link rel="stylesheet" href="https://goo.gl/4kFNLH">
            <body><div class="container">
            <h1><span class="glyphicon glyphicon-eye-open"></span> Your API \{\{name\}\} is
            live !</h1>
            <div class="alert alert-success" role="alert"><p>This API is \{\{description\}\}
            running on <b>\{\{hostname\}\}</b> with current release <b>v\{\{version\}\}</b></p></div>
            <div class="alert alert-info" role="alert"><p>The application signature is <b>\{\{appsign\}\}</b>
            and corespond to the example API using micro-service framework <b>\{\{package.name\}\}
            v\{\{package.version\}\}</b>.</p></div>
            <h1>Demo de deploiement serverless</h1>
            <nav class="navbar navbar-default navbar-fixed-bottom"><div class="container">
            Microservice engine is <b>\{\{package.name\}\} v\{\{package.version\}\}</b>. \{\{package.description\}\}</div></nav>
            </div></body>
            </html>
      - path: "/health"
        resource: serviceinfo-sample
        endpoint: health
      - path: "/info"
        resource: serviceinfo-sample
        endpoint: info
      - path: "/ping"
        desc: Ping the application. Return a sample message in json
        code: '200'
        body: pong
    bot:
      lib: "/conf/mylib"
      cron:
      - id: test-cront-task
        name: Execute test cron task
        schedule: "*/1 * * * *"
        task: myCronFunction
  mylib.js: |-
    /* global $log, module */

    //'use strict';

    var mylib = {
      myCronFunction: function (config) {
        var moment = require('moment');
        $log.info("cron task " + config.id + " executed at " + moment().format('YYYY-MM-DD HH:mm:ss'));
      }
    };

    module.exports = mylib;


# - apiVersion: serving.knative.dev/v1
#   kind: Configuration
#   metadata:
#     name: sxapi-kn-v1
#     namespace: {{- $namespace -}} 
#     labels: 
#       app.kubernetes.io/name: "sxapi-kn-v1-revision"
#       app.openshift.io/runtime: nodejs
#       app.openshift.io/runtime-version: '12'
#       serving.knative.dev/service: sxapi-kn
#     ownerReferences:
#       - apiVersion: serving.knative.dev/v1
#         blockOwnerDeletion: true
#         controller: true
#         kind: Service
#         name: sxapi-kn
#         uid: c847c33c-e5b2-4003-ba5a-407ebd5f612d
#   spec:
#     template:
#       metadata:
#         labels: 
#           app.kubernetes.io/name: "sxapi-kn-service-pod"
#           app.openshift.io/runtime: nodejs
#           app.openshift.io/runtime-version: '12'
#       spec:
#         containerConcurrency: 0
#         containers:
#           - name: user-container
#             image: "quay.io/startx/sxapi:testing"
#             env:
#               - name: SX_VERBOSE
#                 value: "true"
#               - name: SX_DEBUG
#                 value: "true"
#             envFrom:
#               - configMapRef:
#                   name: {{- $namespace -}}-config
#             command:
#               - "/bin/sx-nodejs"
#             args:
#               - run
#             ports:
#               - containerPort: 8080
#                 protocol: TCP
#             # livenessProbe:
#             #   exec:
#             #     command:
#             #       - "/bin/sx-nodejs"
#             #       - isLive
#             #   initialDelaySeconds: 1
#             #   timeoutSeconds: 5
#             #   periodSeconds: 5
#             #   successThreshold: 1
#             #   failureThreshold: 2
#             readinessProbe:
#               successThreshold: 1
#               tcpSocket:
#                 port: 0
#             # readinessProbe:
#             #   exec:
#             #     command:
#             #       - "/bin/sx-nodejs"
#             #       - isReady
#             #   initialDelaySeconds: 4
#             #   timeoutSeconds: 5
#             #   periodSeconds: 5
#             #   successThreshold: 1
#             #   failureThreshold: 2
#             resources:
#               limits:
#                 cpu: 100m
#                 memory: 128Mi
#               requests:
#                 cpu: 20m
#                 memory: 64Mi
#             volumeMounts:
#               - name: {{- $namespace -}}-conf
#                 mountPath: "/conf"
#         volumes:
#           - name: {{- $namespace -}}-conf
#             configMap:
#               name: "{{- $namespace -}}-lib-v1"
#               items:
#               - key: sxapi.yml
#                 path: sxapi.yml
#               - key: mylib.js
#                 path: mylib.js
#         timeoutSeconds: 300
# - apiVersion: serving.knative.dev/v1
#   kind: Configuration
#   metadata:
#     name: sxapi-kn-v2
#     namespace: {{- $namespace -}} 
#     labels: 
#       app.kubernetes.io/name: "sxapi-kn-v2-revision"
#       app.openshift.io/runtime: nodejs
#       app.openshift.io/runtime-version: '12'
#       serving.knative.dev/service: sxapi-kn
#     ownerReferences:
#       - apiVersion: serving.knative.dev/v1
#         blockOwnerDeletion: true
#         controller: true
#         kind: Service
#         name: sxapi-kn
#         uid: c847c33c-e5b2-4003-ba5a-407ebd5f612d
#   spec:
#     template:
#       metadata:
#         labels: 
#           app.kubernetes.io/name: "sxapi-kn-service-pod"
#           app.openshift.io/runtime: nodejs
#           app.openshift.io/runtime-version: '12'
#       spec:
#         containerConcurrency: 0
#         containers:
#           - name: user-container
#             image: "quay.io/startx/sxapi:testing"
#             env:
#               - name: SX_VERBOSE
#                 value: "true"
#               - name: SX_DEBUG
#                 value: "true"
#             envFrom:
#               - configMapRef:
#                   name: {{- $namespace -}}-config
#             command:
#               - "/bin/sx-nodejs"
#             args:
#               - run
#             ports:
#               - containerPort: 8080
#                 protocol: TCP
#             # livenessProbe:
#             #   exec:
#             #     command:
#             #       - "/bin/sx-nodejs"
#             #       - isLive
#             #   initialDelaySeconds: 1
#             #   timeoutSeconds: 5
#             #   periodSeconds: 5
#             #   successThreshold: 1
#             #   failureThreshold: 2
#             readinessProbe:
#               successThreshold: 1
#               tcpSocket:
#                 port: 0
#             # readinessProbe:
#             #   exec:
#             #     command:
#             #       - "/bin/sx-nodejs"
#             #       - isReady
#             #   initialDelaySeconds: 4
#             #   timeoutSeconds: 5
#             #   periodSeconds: 5
#             #   successThreshold: 1
#             #   failureThreshold: 2
#             resources:
#               limits:
#                 cpu: 100m
#                 memory: 128Mi
#               requests:
#                 cpu: 20m
#                 memory: 64Mi
#             volumeMounts:
#               - name: {{- $namespace -}}-conf
#                 mountPath: "/conf"
#         volumes:
#           - name: {{- $namespace -}}-conf
#             configMap:
#               name: "{{- $namespace -}}-lib-v2"
#               items:
#               - key: sxapi.yml
#                 path: sxapi.yml
#               - key: mylib.js
#                 path: mylib.js
#         timeoutSeconds: 300

# - kind: Revision
#   apiVersion: serving.knative.dev/v1
#   metadata:
#     name: sxapi-kn-v1
#     namespace: {{- $namespace -}} 
#     labels: 
#       app.kubernetes.io/name: "sxapi-kn-v1-revision"
#       app.openshift.io/runtime: nodejs
#       app.openshift.io/runtime-version: '12'
#       serving.knative.dev/service: sxapi-kn
#       serving.knative.dev/configuration: sxapi-kn
#     ownerReferences:
#       - apiVersion: serving.knative.dev/v1
#         blockOwnerDeletion: true
#         controller: true
#         kind: Configuration
#         name: sxapi-kn
#         uid: dee4fae5-c237-4316-8077-d11109957dff
#   spec:
#     containerConcurrency: 0
#     containers:
#       - name: user-container
#         image: "quay.io/startx/sxapi:testing"
#         env:
#           - name: SX_VERBOSE
#             value: "true"
#           - name: SX_DEBUG
#             value: "true"
#         envFrom:
#           - configMapRef:
#               name: {{- $namespace -}}-config
#         command:
#           - "/bin/sx-nodejs"
#         args:
#           - run
#         ports:
#           - containerPort: 8080
#             protocol: TCP
#         # livenessProbe:
#         #   exec:
#         #     command:
#         #       - "/bin/sx-nodejs"
#         #       - isLive
#         #   initialDelaySeconds: 1
#         #   timeoutSeconds: 5
#         #   periodSeconds: 5
#         #   successThreshold: 1
#         #   failureThreshold: 2
#         readinessProbe:
#           successThreshold: 1
#           tcpSocket:
#             port: 0
#         # readinessProbe:
#         #   exec:
#         #     command:
#         #       - "/bin/sx-nodejs"
#         #       - isReady
#         #   initialDelaySeconds: 4
#         #   timeoutSeconds: 5
#         #   periodSeconds: 5
#         #   successThreshold: 1
#         #   failureThreshold: 2
#         resources:
#           limits:
#             cpu: 100m
#             memory: 128Mi
#           requests:
#             cpu: 20m
#             memory: 64Mi
#         volumeMounts:
#           - name: {{- $namespace -}}-conf
#             mountPath: "/conf"
#     volumes:
#       - name: {{- $namespace -}}-conf
#         configMap:
#           name: "{{- $namespace -}}-lib-v1"
#           items:
#           - key: sxapi.yml
#             path: sxapi.yml
#           - key: mylib.js
#             path: mylib.js
#     timeoutSeconds: 300
# - kind: Revision
#   apiVersion: serving.knative.dev/v1
#   metadata:
#     name: sxapi-kn-v2
#     namespace: {{- $namespace -}} 
#     labels: 
#       app.kubernetes.io/name: "sxapi-kn-v2-revision"
#       app.openshift.io/runtime: nodejs
#       app.openshift.io/runtime-version: '12'
#       serving.knative.dev/service: sxapi-kn
#       serving.knative.dev/configuration: sxapi-kn
#     ownerReferences:
#       - apiVersion: serving.knative.dev/v1
#         blockOwnerDeletion: true
#         controller: true
#         kind: Configuration
#         name: sxapi-kn
#         uid: dee4fae5-c237-4316-8077-d11109957dff
#   spec:
#     containerConcurrency: 0
#     containers:
#       - name: user-container
#         image: "quay.io/startx/sxapi:testing"
#         env:
#           - name: SX_VERBOSE
#             value: "true"
#           - name: SX_DEBUG
#             value: "true"
#         envFrom:
#           - configMapRef:
#               name: {{- $namespace -}}-config
#         command:
#           - "/bin/sx-nodejs"
#         args:
#           - run
#         ports:
#           - containerPort: 8080
#             protocol: TCP
#         # livenessProbe:
#         #   exec:
#         #     command:
#         #       - "/bin/sx-nodejs"
#         #       - isLive
#         #   initialDelaySeconds: 1
#         #   timeoutSeconds: 5
#         #   periodSeconds: 5
#         #   successThreshold: 1
#         #   failureThreshold: 2
#         readinessProbe:
#           successThreshold: 1
#           tcpSocket:
#             port: 0
#         # readinessProbe:
#         #   exec:
#         #     command:
#         #       - "/bin/sx-nodejs"
#         #       - isReady
#         #   initialDelaySeconds: 4
#         #   timeoutSeconds: 5
#         #   periodSeconds: 5
#         #   successThreshold: 1
#         #   failureThreshold: 2
#         resources:
#           limits:
#             cpu: 100m
#             memory: 128Mi
#           requests:
#             cpu: 20m
#             memory: 64Mi
#         volumeMounts:
#           - name: {{- $namespace -}}-conf
#             mountPath: "/conf"
#     volumes:
#       - name: {{- $namespace -}}-conf
#         configMap:
#           name: "{{- $namespace -}}-lib-v2"
#           items:
#           - key: sxapi.yml
#             path: sxapi.yml
#           - key: mylib.js
#             path: mylib.js
#     timeoutSeconds: 300





{{- end }}
{{- end }}{{- end }}{{- end }}
