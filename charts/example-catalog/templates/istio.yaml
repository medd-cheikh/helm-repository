{{- if .Values.demo }}{{- if .Values.demo.istio }}{{- if .Values.demo.istio.enabled -}}
{{- $root := . -}}
{{- with .Values.demo.istio -}}
{{- $namespace := .namespace | default "demo-istio" -}}
{{- $namespace_istio := .namespaceIstio | default "istio-system" -}}
{{- $scope := .scope | default $root.Values.context.scope -}}
{{- $cluster := .cluster | default $root.Values.context.cluster -}}
{{- $env := .environment | default $root.Values.context.environment -}}
{{- $component := .component | default $root.Values.context.component -}}
{{- $version := .version | default $root.Values.context.version -}}
{{- $randrun := printf "%s%s" "a" (randAlphaNum 8 | lower | nospace) -}}

---
kind: Gateway
apiVersion: networking.istio.io/v1alpha3
metadata:
  name: "{{- $scope -}}-istio-gateway"
  namespace: {{ $namespace | quote }}
  annotations:
    {{- include "example-catalog.annotations" $root | nindent 4 }}
  labels:
    {{- include "example-catalog.labels" $root | nindent 4 }}
    app: "istio"
    app.kubernetes.io/name: "{{- $scope -}}-istio-gateway"
spec:
  selector:
    istio: ingressgateway
  servers:
    - port:
        number: 80
        name: http
        protocol: HTTP
      hosts:
        - "*"
{{- if .route }}
---
kind: Route
apiVersion: route.openshift.io/v1
metadata:
  name: "{{- $scope -}}-istio-public"
  namespace: {{ $namespace_istio | quote }}
  annotations:
    {{- include "example-catalog.annotations" $root | nindent 4 }}
  labels:
    {{- include "example-catalog.labels" $root | nindent 4 }}
    app: "istio"
    app.kubernetes.io/name: "{{- $scope -}}-{{- $env -}}-istio-{{- $scope -}}-istio-public-route"
spec:
  host: "{{- $scope -}}-istio.apps.{{- $cluster -}}.startx.fr"
  to:
    kind: Service
    name: istio-ingressgateway
    weight: 100
  port:
    targetPort: 8080
  wildcardPolicy: None
{{- end }}
---
kind: Service
apiVersion: v1
metadata:
  name: details
  namespace: {{ $namespace | quote }}
  annotations:
    {{- include "example-catalog.annotations" $root | nindent 4 }}
  labels:
    {{- include "example-catalog.labels" $root | nindent 4 }}
    app: details
    version: "v1"
    app.kubernetes.io/part-of: details
    app.kubernetes.io/name: "{{- $scope -}}-{{- $env -}}-istio-details-service"
spec:
  ports:
    - port: 9080
      name: http
  selector:
    app: details
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: details-v1
  namespace: {{ $namespace | quote }}
  annotations:
    {{- include "example-catalog.annotations" $root | nindent 4 }}
  labels:
    {{- include "example-catalog.labels" $root | nindent 4 }}
    app: details
    version: "v1"
    app.openshift.io/runtime: spring
    app.kubernetes.io/part-of: details
    app.kubernetes.io/component: "details"
    kube-monkey/enabled: enabled
    kube-monkey/identifier: {{ include "startx.appName" $root | default "cluster" | quote }} 
    app.kubernetes.io/name: "{{- $scope -}}-{{- $env -}}-istio-details-v1-deployment"
spec:
  replicas: 2
  selector:
    matchLabels:
      app: details
      version: "v1"
  template:
    metadata:
      annotations:
        {{- include "example-catalog.annotations" $root | nindent 8 }}
        sidecar.istio.io/inject: "true"
      labels:
        {{- include "example-catalog.labels" $root | nindent 8 }}
        app.kubernetes.io/name: "{{- $scope -}}-{{- $env -}}-istio-details-v1-pod"
        app: details
        version: "v1"
        app.kubernetes.io/part-of: details
        app.kubernetes.io/component: "details"
    spec:
      containers:
        - name: details
          image: docker.io/maistra/examples-bookinfo-details-v1:0.12.0
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 9080
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
            requests:
              cpu: 200m
              memory: 256Mi
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: details-v2
  namespace: {{ $namespace | quote }}
  annotations:
    {{- include "example-catalog.annotations" $root | nindent 4 }}
  labels:
    {{- include "example-catalog.labels" $root | nindent 4 }}
    app: details
    version: "v2"
    app.openshift.io/runtime: spring
    app.kubernetes.io/part-of: details
    app.kubernetes.io/component: "details"
    kube-monkey/enabled: enabled
    kube-monkey/identifier: {{ include "startx.appName" $root | default "cluster" | quote }} 
    app.kubernetes.io/name: "{{- $scope -}}-{{- $env -}}-istio-details-v2-deployment"
spec:
  replicas: 2
  selector:
    matchLabels:
      app: details
      version: "v2"
  template:
    metadata:
      annotations:
        {{- include "example-catalog.annotations" $root | nindent 8 }}
        sidecar.istio.io/inject: "true"
      labels:
        {{- include "example-catalog.labels" $root | nindent 8 }}
        version: "v2"
        app.kubernetes.io/name: "{{- $scope -}}-{{- $env -}}-istio-details-v2-pod"
        app: details
        version: "v2"
        app.kubernetes.io/part-of: details
        app.kubernetes.io/component: "details"
    spec:
      containers:
        - name: details
          image: docker.io/maistra/examples-bookinfo-details-v2:0.12.0
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 9080
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
            requests:
              cpu: 200m
              memory: 256Mi
---
kind: Service
apiVersion: v1
metadata:
  name: ratings
  namespace: {{ $namespace | quote }}
  annotations:
    {{- include "example-catalog.annotations" $root | nindent 4 }}
  labels:
    {{- include "example-catalog.labels" $root | nindent 4 }}
    app: ratings
    version: "v1"
    app.kubernetes.io/part-of: ratings
    app.kubernetes.io/name: "{{- $scope -}}-{{- $env -}}-istio-ratings-service"
spec:
  ports:
    - port: 9080
      name: http
  selector:
    app: ratings
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: ratings-v1
  namespace: {{ $namespace | quote }}
  annotations:
    {{- include "example-catalog.annotations" $root | nindent 4 }}
  labels:
    {{- include "example-catalog.labels" $root | nindent 4 }}
    app: ratings
    version: "v1"
    app.openshift.io/runtime: spring
    app.kubernetes.io/part-of: ratings
    app.kubernetes.io/component: "ratings"
    kube-monkey/enabled: enabled
    kube-monkey/identifier: {{ include "startx.appName" $root | default "cluster" | quote }} 
    app.kubernetes.io/name: "{{- $scope -}}-{{- $env -}}-istio-ratings-v1-deployment"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ratings
      version: "v1"
  template:
    metadata:
      annotations:
        {{- include "example-catalog.annotations" $root | nindent 8 }}
        sidecar.istio.io/inject: "true"
      labels:
        {{- include "example-catalog.labels" $root | nindent 8 }}
        app.kubernetes.io/name: "{{- $scope -}}-{{- $env -}}-istio-ratings-v1-pod"
        app: ratings
        version: "v1"
        app.kubernetes.io/part-of: ratings
        app.kubernetes.io/component: "ratings"
    spec:
      containers:
        - name: ratings
          image: docker.io/maistra/examples-bookinfo-ratings-v1:0.12.0
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 9080
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
            requests:
              cpu: 200m
              memory: 256Mi
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: ratings-v2
  namespace: {{ $namespace | quote }}
  annotations:
    {{- include "example-catalog.annotations" $root | nindent 4 }}
  labels:
    {{- include "example-catalog.labels" $root | nindent 4 }}
    app: ratings
    version: "v2"
    app.openshift.io/runtime: spring
    app.kubernetes.io/part-of: ratings
    app.kubernetes.io/component: "ratings"
    kube-monkey/enabled: enabled
    kube-monkey/identifier: {{ include "startx.appName" $root | default "cluster" | quote }} 
    app.kubernetes.io/name: "{{- $scope -}}-{{- $env -}}-istio-ratings-v2-deployment"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ratings
      version: "v2"
  template:
    metadata:
      annotations:
        {{- include "example-catalog.annotations" $root | nindent 8 }}
        sidecar.istio.io/inject: "true"
      labels:
        {{- include "example-catalog.labels" $root | nindent 8 }}
        version: "v2"
        app.kubernetes.io/name: "{{- $scope -}}-{{- $env -}}-istio-ratings-v2-pod"
        app: ratings
        version: "v2"
        app.kubernetes.io/part-of: ratings
        app.kubernetes.io/component: "ratings"
    spec:
      containers:
        - name: ratings
          image: docker.io/maistra/examples-bookinfo-ratings-v2:0.12.0
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 9080
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
            requests:
              cpu: 200m
              memory: 256Mi
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: bookinfo-reviews
  namespace: {{ $namespace | quote }}
  annotations:
    {{- include "example-catalog.annotations" $root | nindent 4 }}
  labels:
    {{- include "example-catalog.labels" $root | nindent 4 }}
    app: reviews
    version: "v1"
    app.kubernetes.io/part-of: reviews
    app.kubernetes.io/name: "{{- $scope -}}-{{- $env -}}-istio-reviews-sa"
---
kind: Service
apiVersion: v1
metadata:
  name: reviews
  namespace: {{ $namespace | quote }}
  annotations:
    {{- include "example-catalog.annotations" $root | nindent 4 }}
  labels:
    {{- include "example-catalog.labels" $root | nindent 4 }}
    app: reviews
    app.kubernetes.io/name: "{{- $scope -}}-{{- $env -}}-istio-reviews-service"
spec:
  ports:
    - port: 9080
      name: http
  selector:
    app: reviews
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: reviews-v1
  namespace: {{ $namespace | quote }}
  annotations:
    {{- include "example-catalog.annotations" $root | nindent 4 }}
  labels:
    {{- include "example-catalog.labels" $root | nindent 4 }}
    app: reviews
    version: "v1"
    app.openshift.io/runtime: spring
    app.kubernetes.io/part-of: reviews
    app.kubernetes.io/component: "reviews"
    kube-monkey/enabled: enabled
    kube-monkey/identifier: {{ include "startx.appName" $root | default "cluster" | quote }} 
    app.kubernetes.io/name: "{{- $scope -}}-{{- $env -}}-istio-reviews-v1-deployment"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: reviews
      version: "v1"
  template:
    metadata:
      annotations:
        {{- include "example-catalog.annotations" $root | nindent 8 }}
        sidecar.istio.io/inject: "true"
      labels:
        {{- include "example-catalog.labels" $root | nindent 8 }}
        app.kubernetes.io/name: "{{- $scope -}}-{{- $env -}}-istio-reviews-v1-pod"
        app: reviews
        version: "v1"
        app.kubernetes.io/part-of: reviews
        app.kubernetes.io/component: "reviews"
    spec:
      containers:
        - name: reviews
          image: docker.io/maistra/examples-bookinfo-reviews-v1:0.12.0
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 9080
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
            requests:
              cpu: 200m
              memory: 256Mi
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: reviews-v2
  namespace: {{ $namespace | quote }}
  annotations:
    {{- include "example-catalog.annotations" $root | nindent 4 }}
  labels:
    {{- include "example-catalog.labels" $root | nindent 4 }}
    app: reviews
    version: "v2"
    app.openshift.io/runtime: spring
    app.kubernetes.io/part-of: reviews
    app.kubernetes.io/component: "reviews"
    kube-monkey/enabled: enabled
    kube-monkey/identifier: {{ include "startx.appName" $root | default "cluster" | quote }} 
    app.kubernetes.io/name: "{{- $scope -}}-{{- $env -}}-istio-reviews-v2-deployment"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: reviews
      version: "v2"
  template:
    metadata:
      annotations:
        {{- include "example-catalog.annotations" $root | nindent 8 }}
        sidecar.istio.io/inject: "true"
      labels:
        {{- include "example-catalog.labels" $root | nindent 8 }}
        version: "v2"
        app.kubernetes.io/name: "{{- $scope -}}-{{- $env -}}-istio-reviews-v2-pod"
        app: reviews
        version: "v2"
        app.kubernetes.io/part-of: reviews
        app.kubernetes.io/component: "reviews"
    spec:
      serviceAccountName: bookinfo-reviews
      containers:
        - name: reviews
          image: docker.io/maistra/examples-bookinfo-reviews-v2:0.12.0
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 9080
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
            requests:
              cpu: 200m
              memory: 256Mi
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: reviews-v3
  namespace: {{ $namespace | quote }}
  annotations:
    {{- include "example-catalog.annotations" $root | nindent 4 }}
  labels:
    {{- include "example-catalog.labels" $root | nindent 4 }}
    app: reviews
    version: "v3"
    app.openshift.io/runtime: spring
    kube-monkey/enabled: enabled
    kube-monkey/identifier: {{ include "startx.appName" $root | default "cluster" | quote }} 
    app.kubernetes.io/name: "{{- $scope -}}-{{- $env -}}-istio-reviews-v3-deployment"
    app.kubernetes.io/part-of: reviews
    app.kubernetes.io/component: "reviews"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: reviews
      version: "v3"
  template:
    metadata:
      annotations:
        {{- include "example-catalog.annotations" $root | nindent 8 }}
        sidecar.istio.io/inject: "true"
      labels:
        {{- include "example-catalog.labels" $root | nindent 8 }}
        app: reviews
        version: "v3"
        app.kubernetes.io/name: "{{- $scope -}}-{{- $env -}}-istio-reviews-v3-pod"
        app.kubernetes.io/part-of: reviews
        app.kubernetes.io/component: "reviews"
    spec:
      serviceAccountName: bookinfo-reviews
      containers:
        - name: reviews
          image: docker.io/maistra/examples-bookinfo-reviews-v3:0.12.0
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 9080
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
            requests:
              cpu: 200m
              memory: 256Mi
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: bookinfo-productpage
  namespace: {{ $namespace | quote }}
  annotations:
    {{- include "example-catalog.annotations" $root | nindent 4 }}
  labels:
    {{- include "example-catalog.labels" $root | nindent 4 }}
    app: productpage
    version: "v1"
    app.kubernetes.io/part-of: productpage
    app.kubernetes.io/name: "{{- $scope -}}-{{- $env -}}-istio-productpage-sa"
---
kind: Service
apiVersion: v1
metadata:
  name: productpage
  namespace: {{ $namespace | quote }}
  annotations:
    {{- include "example-catalog.annotations" $root | nindent 4 }}
  labels:
    {{- include "example-catalog.labels" $root | nindent 4 }}
    app: productpage
    app.kubernetes.io/name: "{{- $scope -}}-{{- $env -}}-istio-productpage-service"
spec:
  ports:
    - port: 9080
      name: http
  selector:
    app: productpage
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: productpage-v1
  namespace: {{ $namespace | quote }}
  annotations:
    {{- include "example-catalog.annotations" $root | nindent 4 }}
  labels:
    {{- include "example-catalog.labels" $root | nindent 4 }}
    app: productpage
    version: "v1"
    app.openshift.io/runtime: spring
    app.kubernetes.io/part-of: productpage
    app.kubernetes.io/component: "productpage"
    kube-monkey/enabled: enabled
    kube-monkey/identifier: {{ include "startx.appName" $root | default "cluster" | quote }} 
    app.kubernetes.io/name: "{{- $scope -}}-{{- $env -}}-istio-productpage-v1-deployment"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: productpage
      version: "v1"
  template:
    metadata:
      annotations:
        {{- include "example-catalog.annotations" $root | nindent 8 }}
        sidecar.istio.io/inject: "true"
      labels:
        {{- include "example-catalog.labels" $root | nindent 8 }}
        app.kubernetes.io/name: "{{- $scope -}}-{{- $env -}}-istio-productpage-v1-pod"
        app: productpage
        version: "v1"
        app.kubernetes.io/part-of: productpage
        app.kubernetes.io/component: "productpage"
    spec:
      serviceAccountName: bookinfo-productpage
      containers:
        - name: productpage
          image: docker.io/maistra/examples-bookinfo-productpage-v1:0.12.0
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 9080
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
            requests:
              cpu: 200m
              memory: 256Mi
---
kind: VirtualService
apiVersion: networking.istio.io/v1alpha3
metadata:
  name: bookinfo
  namespace: {{ $namespace | quote }}
  annotations:
    {{- include "example-catalog.annotations" $root | nindent 4 }}
  labels:
    {{- include "example-catalog.labels" $root | nindent 4 }}
    app: bookinfo
    app.kubernetes.io/name: "{{- $scope -}}-{{- $env -}}-istio-bookinfo-virtualservice"
spec:
  hosts:
    - "*"
  gateways:
    - "{{- $scope -}}-istio-gateway"
  http:
    - match:
        - uri:
            exact: /productpage
        - uri:
            exact: /login
        - uri:
            exact: /logout
        - uri:
            prefix: /api/v1/products
        - uri:
            prefix: /
      route:
        - destination:
            host: productpage
            port:
              number: 9080
---
kind: DestinationRule
apiVersion: networking.istio.io/v1alpha3
metadata:
  name: productpage
  namespace: {{ $namespace | quote }}
  annotations:
    {{- include "example-catalog.annotations" $root | nindent 4 }}
  labels:
    {{- include "example-catalog.labels" $root | nindent 4 }}
    app: productpage
    app.kubernetes.io/name: "{{- $scope -}}-{{- $env -}}-istio-productpage-destinationrule"
spec:
  host: productpage
  trafficPolicy:
    tls:
      mode: ISTIO_MUTUAL
  subsets:
    - name: v1
      labels:
        version: "v1"
---
kind: DestinationRule
apiVersion: networking.istio.io/v1alpha3
metadata:
  name: reviews
  namespace: {{ $namespace | quote }}
  annotations:
    {{- include "example-catalog.annotations" $root | nindent 4 }}
  labels:
    {{- include "example-catalog.labels" $root | nindent 4 }}
    app: reviews
    app.kubernetes.io/name: "{{- $scope -}}-{{- $env -}}-istio-reviews-destinationrule"
spec:
  host: reviews
  trafficPolicy:
    tls:
      mode: ISTIO_MUTUAL
  subsets:
    - name: v1
      labels:
        version: "v1"
    - name: v2
      labels:
        version: "v2"
    - name: v3
      labels:
        version: "v3"
---
kind: DestinationRule
apiVersion: networking.istio.io/v1alpha3
metadata:
  name: ratings
  namespace: {{ $namespace | quote }}
  annotations:
    {{- include "example-catalog.annotations" $root | nindent 4 }}
  labels:
    {{- include "example-catalog.labels" $root | nindent 4 }}
    app: ratings
    app.kubernetes.io/name: "{{- $scope -}}-{{- $env -}}-istio-ratings-destinationrule"
spec:
  host: ratings
  trafficPolicy:
    tls:
      mode: ISTIO_MUTUAL
  subsets:
    - name: v1
      labels:
        version: "v1"
    - name: v2
      labels:
        version: "v2"
---
kind: DestinationRule
apiVersion: networking.istio.io/v1alpha3
metadata:
  name: details
  namespace: {{ $namespace | quote }}
  annotations:
    {{- include "example-catalog.annotations" $root | nindent 4 }}
  labels:
    {{- include "example-catalog.labels" $root | nindent 4 }}
    app: details
    app.kubernetes.io/name: "{{- $scope -}}-{{- $env -}}-istio-details-destinationrule"
spec:
  host: details
  trafficPolicy:
    tls:
      mode: ISTIO_MUTUAL
  subsets:
    - name: v1
      labels:
        version: "v1"
    - name: v2
      labels:
        version: "v2"
{{- end }}
{{- end }}{{- end }}{{- end }}
