{{- if .Values.demo }}{{- if .Values.demo.sxapi_build }}{{- if .Values.demo.sxapi_build.enabled -}}
{{- $root := . -}}
{{- with .Values.demo.sxapi_build -}}
{{- $namespace := .namespace | default "demo-sxapi" -}}
{{- $scope := .scope | default $root.Values.context.scope -}}
{{- $cluster := .cluster | default $root.Values.context.cluster -}}
{{- $env := .environment | default $root.Values.context.environment -}}
{{- $component := .component | default $root.Values.context.component -}}
{{- $version := .version | default $root.Values.context.version -}}
{{- $randrun := printf "%s%s" "a" (randAlphaNum 8 | lower | nospace) -}}

---
kind: ImageStream
apiVersion: image.openshift.io/v1
metadata:
  name: "sxapi-build"
  namespace: {{ $namespace | quote }}
  annotations:
    {{- include "example-catalog.annotations" $root | nindent 4 }}
  labels:
    {{- include "example-catalog.labels" $root | nindent 4 }}
    app: "sxapi-build"
    app.kubernetes.io/name: "sxapi-build-imagestream"
spec:
  tags:
    - name: latest
      annotations:
        openshift.io/display-name: "{{- $scope -}} - {{- $component -}} application"
        description: Application {{- $component -}} image for {{- $scope -}} scope
        iconClass: icon-nodejs
        tags: startx,nodejs,httpd
        supports: http
        version: "{{- $env -}}"
        sampleRepo: https://github.com/startxfr/sxv4.git
---
kind: ImageStream
apiVersion: image.openshift.io/v1
metadata:
  name: "sxapi-builder"
  namespace: {{ $namespace | quote }}
  annotations:
    {{- include "example-catalog.annotations" $root | nindent 4 }}
  labels:
    {{- include "example-catalog.labels" $root | nindent 4 }}
    app.kubernetes.io/name: "sxapi-builder-imagestream"
spec:
  tags:
    - name: latest
      annotations:
        openshift.io/display-name: "{{- $scope -}} - {{- $component -}} application"
        description: Application {{- $component -}} image for {{- $scope -}} scope
        iconClass: icon-nodejs
        tags: startx,nodejs,httpd
        supports: http
        version: "{{- $env -}}"
        sampleRepo: https://github.com/startxfr/sxv4.git
      from:
        kind: DockerImage
        name: startx/sxapi:testing
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: "sxapi-build-config"
  namespace: {{ $namespace | quote }}
  annotations:
    {{- include "example-catalog.annotations" $root | nindent 4 }}
    template.openshift.io/expose-id: "{.data['SX_ID']}"
    template.openshift.io/expose-type: "{.data['SX_TYPE']}"
    template.openshift.io/expose-service: "{.data['SX_COMPONENT']}"
    template.openshift.io/expose-name: "{.data['SX_NAME']}"
    template.openshift.io/expose-summary: "{.data['SX_SUMMARY']}"
    template.openshift.io/expose-version: "{.data['SX_VERSION']}"
  labels:
    {{- include "example-catalog.labels" $root | nindent 4 }}
    app.kubernetes.io/name: "sxapi-build-config-configmap"
data:
  SX_ID: "{{- $scope -}}-{{- $component -}}-{{- $env -}}/app"
  SX_TYPE: app
  SX_COMPONENT: "{{- $component -}}"
  SX_NAME: Startx {{- $component -}} application
  SX_SUMMARY: Startx {{- $component -}} application based on apache container
  SX_VERSION: "{{- $env -}}"
  SX_VERBOSE: "true"
  SX_DEBUG: "true"
---
kind: BuildConfig
apiVersion: build.openshift.io/v1
metadata:
  name: "sxapi-build"
  namespace: {{ $namespace | quote }}
  annotations:
    {{- include "example-catalog.annotations" $root | nindent 4 }}
  labels:
    {{- include "example-catalog.labels" $root | nindent 4 }}
    app.kubernetes.io/name: "sxapi-build-buildconfig"
spec:
  triggers:
    - type: ImageChange
      imageChange: {}
    - type: ConfigChange
  runPolicy: SerialLatestOnly
  source:
    type: Git
    git:
      uri: https://github.com/startxfr/sxapi-example.git
      ref: "master"
  resources:
    limits:
      cpu: 400m
      memory: 512Mi
    requests:
      cpu: 200m
      memory: 256Mi
  strategy:
    type: Source
    sourceStrategy:
      from:
        kind: ImageStreamTag
        name: sxapi-builder:latest
      env:
        - name: SX_VERBOSE
          value: "true"
        - name: SX_DEBUG
          value: "true"
  output:
    to:
      kind: ImageStreamTag
      name: sxapi-build:latest
---
kind: DeploymentConfig
apiVersion: apps.openshift.io/v1
metadata:
  name: "sxapi-build"
  namespace: {{ $namespace | quote }}
  annotations:
    {{- include "example-catalog.annotations" $root | nindent 4 }}
  labels:
    {{- include "example-catalog.labels" $root | nindent 4 }}
    app.kubernetes.io/name: "sxapi-build-deploymentconfig"
    kube-monkey/enabled: enabled
    kube-monkey/identifier: {{ include "startx.appName" $root | default "cluster" | quote }} 
    app.openshift.io/runtime: nodejs
spec:
  replicas: 2
  strategy:
    type: Rolling
    rollingParams:
      timeoutSeconds: 60
      maxUnavailable: 25%
      maxSurge: 25
      post:
	      execNewPod:
          command:
            - "/bin/sx-nodejs"
          args:
            - info
          failurePolicy: Ignore
          containerName: application
          env:
            - name: SX_VERBOSE
              value: "true"
            - name: SX_DEBUG
              value: "true"
          envFrom:
            - configMapRef:
                name: sxapi-build-config
  triggers:
    - type: ImageChange
      imageChangeParams:
        automatic: true
        containerNames:
          - "application"
        from:
          kind: ImageStreamTag
          name: sxapi-build:latest
    - type: ConfigChange
  test: false
  selector:
    app: "sxapi-build"
    deploymentconfig: "sxapi-build"
  template:
    metadata:
      annotations:
        {{- include "example-catalog.annotations" $root | nindent 8 }}
        sidecar.istio.io/inject: "false"
      labels:
        {{- include "example-catalog.labels" $root | nindent 8 }}
        app.kubernetes.io/name: "sxapi-build-deploymentconfig"
        app: "sxapi-build"
        deploymentconfig: "sxapi-build"
    spec:
      containers:
        - name: "application"
          image: " "
          env:
            - name: SX_VERBOSE
              value: "true"
            - name: SX_DEBUG
              value: "true"
          envFrom:
            - configMapRef:
                name: sxapi-build-config
          command:
            - "/bin/sx-nodejs"
          args:
            - run
          ports:
            - containerPort: 8077
              protocol: TCP
          livenessProbe:
            exec:
              command:
                - "/bin/sx-nodejs"
                - isLive
            initialDelaySeconds: 1
            timeoutSeconds: 5
            periodSeconds: 5
            successThreshold: 1
            failureThreshold: 2
          readinessProbe:
            exec:
              command:
                - "/bin/sx-nodejs"
                - isReady
            initialDelaySeconds: 4
            timeoutSeconds: 5
            periodSeconds: 5
            successThreshold: 1
            failureThreshold: 2
          resources:
            limits:
              cpu: 100m
              memory: 128Mi
            requests:
              cpu: 20m
              memory: 64Mi
          terminationMessagePath: "/dev/termination-log"
          imagePullPolicy: Always
          volumeMounts:
            - name: "sxapi-build-log"
              mountPath: "/var/log/httpd"
      volumes:
        - name: "sxapi-build-log"
          emptyDir:
            medium: ""
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
---
kind: Service
apiVersion: v1
metadata:
  name: "sxapi-build"
  namespace: {{ $namespace | quote }}
  annotations:
    {{- include "example-catalog.annotations" $root | nindent 4 }}
    template.openshift.io/expose-service_ip: "{.spec.clusterIP}"
    template.openshift.io/expose-service_port: "{.spec.ports[0].port}"
    template.openshift.io/expose-service_ip_port: "{.spec.clusterIP}:{.spec.ports[0].port}"
  labels:
    {{- include "example-catalog.labels" $root | nindent 4 }}
    app.kubernetes.io/name: "sxapi-build-service"
spec:
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8077
  selector:
    app: "sxapi-build"
    deploymentconfig: "sxapi-build"
  type: ClusterIP
  sessionAffinity: None
---
kind: Route
apiVersion: route.openshift.io/v1
metadata:
  name: "sxapi-build"
  namespace: {{ $namespace | quote }}
  annotations:
    {{- include "example-catalog.annotations" $root | nindent 4 }}
    haproxy.router.openshift.io/balance: roundrobin
    haproxy.router.openshift.io/disable_cookies: "true"
    template.openshift.io/expose-uri: "http://{.spec.host}{.spec.path}"
  labels:
    {{- include "example-catalog.labels" $root | nindent 4 }}
    app.kubernetes.io/name: "sxapi-build-route"
spec:
  tls:
    insecureEdgeTerminationPolicy: Allow
    termination: edge
  wildcardPolicy: None
  to:
    kind: Service
    name: "sxapi-build"
    weight: 100





{{- end }}
{{- end }}{{- end }}{{- end }}
