{{- if .Values.demo }}{{- if .Values.demo.vault }}{{- if .Values.demo.vault.enabled -}}
{{- $root := . -}}
{{- with .Values.demo.vault -}}
{{- $namespace := .namespace | default "demo-vault" -}}
{{- $scope := .scope | default $root.Values.context.scope -}}
{{- $cluster := .cluster | default $root.Values.context.cluster -}}
{{- $env := .environment | default $root.Values.context.environment -}}
{{- $component := .component | default $root.Values.context.component -}}
{{- $version := .version | default $root.Values.context.version -}}
{{- $randrun := printf "%s%s" "a" (randAlphaNum 8 | lower | nospace) -}}
{{- $appName := .appName | default "vaulted-app" -}}
 
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: vault-auth
  namespace: {{ $namespace | quote }}
  annotations:
    {{- include "example-catalog.annotations" $root | nindent 4 }}
  labels:
    {{- include "example-catalog.labels" $root | nindent 4 }}
    app.kubernetes.io/name: "vault-auth-sa"
---
kind: Secret
apiVersion: v1
metadata:
  name: vault-auth
  namespace: {{ $namespace | quote }}
  annotations:
    {{- include "example-catalog.annotations" $root | nindent 4 }}
    kubernetes.io/service-account.name: vault-auth
  labels:
    {{- include "example-catalog.labels" $root | nindent 4 }}
    app.kubernetes.io/name: "vault-auth-secret"
type: kubernetes.io/service-account-token
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: role-tokenreview-binding
  namespace: {{ $namespace | quote }}
  annotations:
    {{- include "example-catalog.annotations" $root | nindent 4 }}
  labels:
    {{- include "example-catalog.labels" $root | nindent 4 }}
    app.kubernetes.io/name: "vault-role-tokenreview-crb"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:auth-delegator
subjects:
  - kind: ServiceAccount
    name: vault-auth
    namespace: "{{- $namespace -}}"
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: "{{- $appName -}}-config"
  namespace: {{ $namespace | quote }}
  annotations:
    {{- include "example-catalog.annotations" $root | nindent 4 }}
  labels:
    {{- include "example-catalog.labels" $root | nindent 4 }}
    app.kubernetes.io/name: "{{- $appName -}}-config-configmap"
data:
  SX_ID: "{{- $namespace -}}/{{- $appName -}}"
  SX_TYPE: ${APP_STAGE}
  SX_COMPONENT: "{{- $appName -}}"
  SX_NAME: Demo of Vault integration with Openshift
  SX_SUMMARY: Demo of Vault integration with Openshift using Startx tools
  SX_VERSION: 0.0.1
  APP_PATH: /vault/secrets
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: "{{- $appName -}}"
  namespace: {{ $namespace | quote }}
  annotations:
    {{- include "example-catalog.annotations" $root | nindent 4 }}
    # image.openshift.io/triggers: >-
    #   [{"from":{"kind":"ImageStreamTag","name":"startx-apache:alpine3"},"fieldPath":"spec.template.spec.containers[?(@.name==\"{{- $appName -}}\")].image"}]
  labels:
    {{- include "example-catalog.labels" $root | nindent 4 }}
    kube-monkey/enabled: enabled
    kube-monkey/identifier: {{ include "startx.appName" $root | default "cluster" | quote }} 
    app: "{{- $appName -}}"
    app.openshift.io/runtime: sso
    app.kubernetes.io/instance: "{{- $appName -}}"
    app.kubernetes.io/part-of: "{{- $appName -}}"
    app.kubernetes.io/name: "{{- $namespace -}}-{{- $appName -}}-deployment"
spec:
  replicas: 2
  selector:
    matchLabels:
      app: "{{- $appName -}}"
  template:
    metadata:
      annotations:
        {{- include "example-catalog.annotations" $root | nindent 8 }}
        vault.hashicorp.com/agent-inject: "true"
        vault.hashicorp.com/agent-inject-status: "update"
        vault.hashicorp.com/agent-inject-secret-index.html: "{{- $namespace -}}/data/frontend/config"
        vault.hashicorp.com/agent-inject-template-index.html: |
          <html>
          <body>
          <h1>Bienvenue sur la demo Vault secret avec Openshift</h1>
          <p>Voici les secrets provenant de vault ({{- $namespace -}}/data/frontend/config) :</p>
          \{\{- with secret "{{- $namespace -}}/data/frontend/config" -\}\}
          <ul>
          <li><pre>username: \{\{ .Data.data.username \}\}</pre></li>
          <li><pre>password: \{\{ .Data.data.password \}\}</pre></li>
          </ul>
          \{\{- end \}\}
          </body>
          </html>
        # vault.hashicorp.com/namespace: "{{- $namespace -}}"
        vault.hashicorp.com/role: "demo-vault"
      labels:
        {{- include "example-catalog.labels" $root | nindent 8 }}
        app: "{{- $appName -}}"
        app.kubernetes.io/name: "{{- $namespace -}}-{{- $appName -}}-pod"
    spec:
      containers:
        - name: "{{- $appName -}}"
          image: quay.io/startx/apache:alpine3
          ports:
            - containerPort: 8080
              protocol: TCP
          command:
            - "/bin/sx-apache"
          args:
            - run
          envFrom:
            - configMapRef:
                name: "{{- $appName -}}-config"
          livenessProbe:
            exec:
              command:
                - "/bin/sx-apache"
                - isLive
            initialDelaySeconds: 1
            timeoutSeconds: 1
            periodSeconds: 5
            successThreshold: 1
            failureThreshold: 2
          readinessProbe:
            exec:
              command:
                - "/bin/sx-apache"
                - isReady
            initialDelaySeconds: 2
            timeoutSeconds: 1
            periodSeconds: 8
            successThreshold: 1
            failureThreshold: 2
          resources:
            limits:
              cpu: 250m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: Always
      serviceAccountName: vault-auth
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 5
  progressDeadlineSeconds: 600
---
kind: Service
apiVersion: v1
metadata:
  name: "{{- $appName -}}"
  namespace: {{ $namespace | quote }}
  annotations:
    {{- include "example-catalog.annotations" $root | nindent 4 }}
  labels:
    {{- include "example-catalog.labels" $root | nindent 4 }}
    app.kubernetes.io/name: "{{- $namespace -}}-{{- $appName -}}-service"
spec:
  ports:
    - name: 8080-tcp
      protocol: TCP
      port: 8080
      targetPort: 8080
  selector:
    app: "{{- $appName -}}"
    deploymentconfig: "{{- $appName -}}"
  type: ClusterIP
  sessionAffinity: None
---
kind: Route
apiVersion: route.openshift.io/v1
metadata:
  name: "{{- $appName -}}"
  namespace: {{ $namespace | quote }}
  annotations:
    {{- include "example-catalog.annotations" $root | nindent 4 }}
  labels:
    {{- include "example-catalog.labels" $root | nindent 4 }}
    app.kubernetes.io/name: "{{- $namespace -}}-{{- $appName -}}-route"
spec:
  to:
    kind: Service
    name: "{{- $appName -}}"
    weight: 100
  port:
    targetPort: 8080-tcp
  wildcardPolicy: None
{{- end }}
{{- end }}{{- end }}{{- end }}
