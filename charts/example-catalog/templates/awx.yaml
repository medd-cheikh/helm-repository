{{- if .Values.demo }}{{- if .Values.demo.awx }}{{- if .Values.demo.awx.enabled -}}
{{- $root := . -}}
{{- with .Values.demo.awx -}}
{{- $namespace := .namespace | default "demo-awx" -}}
{{- $scope := .scope | default $root.Values.context.scope -}}
{{- $cluster := .cluster | default $root.Values.context.cluster -}}
{{- $env := .environment | default $root.Values.context.environment -}}
{{- $component := .component | default $root.Values.context.component -}}
{{- $version := .version | default $root.Values.context.version -}}
{{- $randrun := printf "%s%s" "a" (randAlphaNum 8 | lower | nospace) -}}

---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: tower
  namespace: {{ $namespace | default "default" | quote }}
  labels:
    {{- include "example-catalog.labels" $root | nindent 4 }}
    app.kubernetes.io/name: "tower-sa"
  annotations:
    {{- include "example-catalog.annotations" $root | nindent 4 }}

---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: tower-scc
  namespace: {{ $namespace | default "default" | quote }}
  labels:
    {{- include "example-catalog.labels" $root | nindent 4 }}
    app.kubernetes.io/name: "tower-scc-role"
  annotations:
    {{- include "example-catalog.annotations" $root | nindent 4 }}
rules:
  - apiGroups: ["security.openshift.io"]
    resources: ["securitycontextconstraints"]
    resourceNames: ["privileged"]
    verbs: ["use"]

---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: tower-scc
  namespace: {{ $namespace | default "default" | quote }}
  labels:
    {{- include "example-catalog.labels" $root | nindent 4 }}
    app.kubernetes.io/name: "tower-scc-rb"
  annotations:
    {{- include "example-catalog.annotations" $root | nindent 4 }}
subjects:
  - kind: ServiceAccount
    name: tower
roleRef:
  kind: Role
  name: tower-scc
  apiGroup: rbac.authorization.k8s.io
---
kind: OperatorGroup
apiVersion: operators.coreos.com/v1
metadata:
  name: "ansible-automation-platform"
  namespace: {{ $namespace | default "default" | quote }}
  labels:
    {{- include "example-catalog.labels" $root | nindent 4 }}
    app.kubernetes.io/name: "default-operatorgroup"
  annotations:
    {{- include "example-catalog.annotations" $root | nindent 4 }}
    olm.providedAPIs: >-
      AnsibleJob.v1alpha1.tower.ansible.com,AutomationController.v1beta1.automationcontroller.ansible.com,AutomationControllerBackup.v1beta1.automationcontroller.ansible.com,AutomationControllerRestore.v1beta1.automationcontroller.ansible.com,AutomationHub.v1beta1.automationhub.ansible.com,AutomationHubBackup.v1beta1.automationhub.ansible.com,AutomationHubRestore.v1beta1.automationhub.ansible.com,JobTemplate.v1alpha1.tower.ansible.com
    helm.sh/hook: pre-install,pre-upgrade
    helm.sh/hook-weight: "-6"
    helm.sh/hook-delete-policy: hook-failed
    # argocd.argoproj.io/hook: PreSync
    # argocd.argoproj.io/hook-delete-policy: HookFailed
    argocd.argoproj.io/sync-wave: "-6"
spec: 
  targetNamespaces:
    - demo-awx
---
kind: Subscription
apiVersion: operators.coreos.com/v1alpha1
metadata:
  name: "ansible-automation-platform-operator"
  namespace: {{ $namespace | default "default" | quote }}
  labels:
    {{- include "example-catalog.labels" $root | nindent 4 }}
    app.kubernetes.io/name: "ansible-automation-platform-operator-subscription"
    operators.coreos.com/ansible-automation-platform-operator.demo-awx: ''
  annotations:
    {{- include "example-catalog.annotations" $root | nindent 4 }}
    # helm.sh/hook: pre-install,pre-upgrade
    helm.sh/hook-weight: "-5"
    # helm.sh/hook-delete-policy: hook-failed
    # argocd.argoproj.io/hook: PreSync
    # argocd.argoproj.io/hook-delete-policy: HookFailed
    argocd.argoproj.io/sync-wave: "-5"
spec:
  channel: early-access
  installPlanApproval: Automatic
  name: ansible-automation-platform-operator
  source: redhat-operators
  sourceNamespace: openshift-marketplace
  startingCSV: ansible-automation-platform-operator.v2.0.1-0.1632495515
---
kind: Secret
apiVersion: v1
metadata:
  name: "tower-admin-password"
  namespace: {{ $namespace | default "default" | quote }}
  labels:
    {{- include "example-catalog.labels" $root | nindent 4 }}
    app.kubernetes.io/name: "tower-admin-password-secret"
  annotations:
    {{- include "example-catalog.annotations" $root | nindent 4 }}
type: Opaque
stringData:
  password: secretdemerde
---
apiVersion: automationcontroller.ansible.com/v1beta1
kind: AutomationController
metadata:
  name: tower
  namespace: {{ $namespace | default "default" | quote }}
  labels:
    {{- include "example-catalog.labels" $root | nindent 4 }}
    app.kubernetes.io/name: "tower-automationcontroller"
  annotations:
    {{- include "example-catalog.annotations" $root | nindent 4 }}
spec:
  replicas: 1
  admin_user: admin
  task_privileged: false
  create_preload_data: true
  garbage_collect_secrets: false
  ingress_type: Route
  route_tls_termination_mechanism: Edge
  image_pull_policy: IfNotPresent
  projects_persistence: false
  # projects_use_existing_claim: _No_
  # projects_storage_class: gp2
  # projects_storage_size: 10Gi

---
apiVersion: automationcontroller.ansible.com/v1beta1
kind: AutomationControllerBackup
metadata:
  name: tower-back
  namespace: {{ $namespace | default "default" | quote }}
  labels:
    {{- include "example-catalog.labels" $root | nindent 4 }}
    app.kubernetes.io/name: "tower-back-automationcontrollerbackup"
  annotations:
    {{- include "example-catalog.annotations" $root | nindent 4 }}
spec:
  deployment_name: tower

{{- end }}
{{- end }}{{- end }}{{- end }}
