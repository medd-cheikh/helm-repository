{{- if .Values.demo }}{{- if .Values.demo.yaml }}{{- if .Values.demo.yaml.enabled -}}
{{- $root := . -}}
{{- with .Values.demo.yaml -}}
{{- $namespace := .namespace | default "demo-yaml" -}}
{{- $scope := .scope | default $root.Values.context.scope -}}
{{- $cluster := .cluster | default $root.Values.context.cluster -}}
{{- $env := .environment | default $root.Values.context.environment -}}
{{- $component := .component | default $root.Values.context.component -}}
{{- $version := .version | default $root.Values.context.version -}}
{{- $randrun := printf "%s%s" "a" (randAlphaNum 8 | lower | nospace) -}}

---
kind: ConfigMap
apiVersion: v1
metadata:
  name: "basic-config"
  namespace: {{ $namespace | quote }}
  annotations:
    {{- include "example-catalog.annotations" $root | nindent 4 }}
  labels:
    {{- include "example-catalog.labels" $root | nindent 4 }}
    app: "yaml"
    app.kubernetes.io/name: "basic-config-configmap"
data:
  KEY_BASIC: "observe label and annotation on basic key"
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: "abstract-config"
  namespace: {{ $namespace | quote }}
  annotations:
    {{- include "example-catalog.annotations" $root | nindent 4 }}
  labels:
    {{- include "example-catalog.labels" $root | nindent 4 }}
    app: "yaml"
    app.kubernetes.io/name: "abstract-config-configmap"
    test.startx.fr/label_a: abstract-config
    test.startx.fr/label_b: abstract-config
    test.startx.fr/label_c: abstract-config
data:
  KEY_ABSTRACT: "observe label and annotation on abstract key"
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: "child-abc-config"
  namespace: {{ $namespace | quote }}
  annotations:
    {{- include "example-catalog.annotations" $root | nindent 4 }}
  labels:
    {{- include "example-catalog.labels" $root | nindent 4 }}
    app: "yaml"
    app.kubernetes.io/name: "child-abc-config-configmap"
    test.startx.fr/label_a: child-config
    test.startx.fr/label_b: child-config
    test.startx.fr/label_c: child-config
data:
  KEY_ABC: "observe label and annotation on key A, B and C"
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: "child-bc-config"
  namespace: {{ $namespace | quote }}
  annotations:
    {{- include "example-catalog.annotations" $root | nindent 4 }}
  labels:
    {{- include "example-catalog.labels" $root | nindent 4 }}
    app: "yaml"
    app.kubernetes.io/name: "child-bc-config-configmap"
    test.startx.fr/label_b: child-config
    test.startx.fr/label_c: child-config
data:
  KEY_BC: "observe label and annotation on key B and C"
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: "child-c-config"
  namespace: {{ $namespace | quote }}
  annotations:
    {{- include "example-catalog.annotations" $root | nindent 4 }}
  labels:
    {{- include "example-catalog.labels" $root | nindent 4 }}
    app: "yaml"
    app.kubernetes.io/name: "child-c-config-configmap"
    test.startx.fr/label_c: child-config
data:
  KEY_C: "observe label and annotation on key C"
---
kind: Job
apiVersion: batch/v1
metadata:
  name: "yaml-job-{{- $randrun -}}"
  namespace: {{ $namespace | quote }}
  annotations:
    {{- include "example-catalog.annotations" $root | nindent 4 }}
    argocd.argoproj.io/hook: PostSync
    argocd.argoproj.io/hook-delete-policy: HookSucceeded
  labels:
    {{- include "example-catalog.labels" $root | nindent 4 }}
    app: "yaml"
    app.kubernetes.io/name: "yaml-job"
    app.openshift.io/runtime: nodejs
spec:
  ttlSecondsAfterFinished: 3600
  template:
    metadata:
      annotations:
        {{- include "example-catalog.annotations" $root | nindent 8 }}
      labels:
        {{- include "example-catalog.labels" $root | nindent 8 }}
        app: "yaml"
        app.kubernetes.io/name: "yaml-pod"
        app.openshift.io/runtime: nodejs
    spec:
      terminationGracePeriodSeconds: 30
      containers:
        - name: example-app
          image: "quay.io/startx/alpine:latest"
          env:
            - name: SX_DEBUG
              value: "true"
            - name: SX_VERBOSE
              value: "true"
          imagePullPolicy: IfNotPresent
          resources:
            limits:
              cpu: 100m
              memory: 64Mi
            requests:
              cpu: "50m"
              memory: "32Mi"
          command:
            - "/bin/bash"
            - "-c"
            - |-
              echo '== List environments variables'
              env
              echo '== List specific environment variables comming from configMap'
              echo 'display KEY_BASIC:' $KEY_BASIC
              echo 'display KEY_ABSTRACT:' $KEY_ABSTRACT
              echo 'display KEY_ABC:' $KEY_ABC
              echo 'display KEY_BC:' $KEY_BC
              echo 'display KEY_C:' $KEY_C
              sleep 10
              exit
          envFrom:
            - configMapRef:
                name: basic-config
            - configMapRef:
                name: abstract-config
            - configMapRef:
                name: child-abc-config
            - configMapRef:
                name: child-bc-config
            - configMapRef:
                name: child-c-config
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
      restartPolicy: OnFailure
  backoffLimit: 2
  activeDeadlineSeconds: 35
{{- end }}
{{- end }}{{- end }}{{- end }}
