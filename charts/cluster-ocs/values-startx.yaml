# Default values for configuration of a STARTX cluster
# see values.yaml for explanation on each params
context: &context
  scope: startx
  cluster: localhost
  environment: dev
  component: infra
  app: startx-quay
rhn:
  enabled: true
  user: startx_rhnuser
  pwd: startx_rhnpwd
route:
  enabled: true
  name: registry
quay:
  enabled: true
  image: 'quay.io/redhat/quay:v3.2.0'
  size: '10Gi'
  storageClass: 'aws-generic-retain'
  storageAccess: 'ReadWriteOnce'
  pullSecretEnabled: true
  admin: 
    username: "admin"
    password: "secretdemerde"
    email: "cl@startx.fr"
  clair: 
    enabled: true
    image: 'quay.io/redhat/clair-jwt:v3.2.0'
    size: '2Gi'
    creds:
      username: "admin"
      password: "secretdemerde"
      root-password: "S3cr3tDeQuay"
  db: 
    name: "quay"
    image: 'registry.access.redhat.com/rhscl/postgresql-96-rhel7:1'
    size: '2Gi'
    creds:
      username: "admin"
      password: "secretdemerde"
      root-password: "S3cr3tDeQuay"
  redis: 
    image: 'registry.access.redhat.com/rhscl/redis-32-rhel7:latest'
    creds:
      password: "secretdemerde"
project: 
  context: 
    <<: *context
  project: 
    type: project
    name: "startx-quay"
    display_name: "STARTX Infra - QUAY"
    description: "STARTX Private Quay enterprise registry & control plane"
  rbac: 
    enabled: true
    groups: 
    - id: dev
      name: dev
      clusterRole: view
    - id: devops
      name: devops
      clusterRole: edit
    - id: ops
      name: ops
      clusterRole: admin
  networkpolicy: 
    enabled: true
    rules: 
    - id: allow-from-openshift-ingress
      spec: |
        podSelector:
          matchLabels:
            app: quay-operator
            quay-enterprise-component: app
            quay-enterprise-cr: startx
        ingress:
          - from:
              - namespaceSelector: {}
  limits: 
    enabled: true
    rules:  |
      limits:
        - type: "Pod"
          min:
            cpu: 50m
            memory: 64Mi
          max:
            cpu: "1"
            memory: "4096Mi"
        - type: "Container"
          defaultRequest:
            cpu: 200m
            memory: 256Mi
          default:
            cpu: 400m
            memory: 512Mi
          min:
            cpu: 50m
            memory: 64Mi
          max:
            cpu: "1"
            memory: "4096Mi"
  quotas: 
    enabled: true
    rules:  |
      hard:
        limits.cpu: "5"
        limits.memory: "10Gi"
        requests.cpu: "1600m"
        requests.memory: "5000Mi"
        requests.storage: "18Gi"
        persistentvolumeclaims: "5"
        ephemeral-storage: "0"
        gp2.storageclass.storage.k8s.io/requests.storage: "8Gi"
        gp2.storageclass.storage.k8s.io/persistentvolumeclaims: "4"
        aws-generic-retain.storageclass.storage.k8s.io/requests.storage: "10Gi"
        aws-generic-retain.storageclass.storage.k8s.io/persistentvolumeclaims: "1"
        aws-generic-delete.storageclass.storage.k8s.io/requests.storage: "0"
        aws-generic-delete.storageclass.storage.k8s.io/persistentvolumeclaims: "0"
        aws-fast-retain.storageclass.storage.k8s.io/requests.storage: "0"
        aws-fast-retain.storageclass.storage.k8s.io/persistentvolumeclaims: "0"
        aws-fast-delete.storageclass.storage.k8s.io/requests.storage: "0"
        aws-fast-delete.storageclass.storage.k8s.io/persistentvolumeclaims: "0"
        aws-slow-retain.storageclass.storage.k8s.io/requests.storage: "0"
        aws-slow-retain.storageclass.storage.k8s.io/persistentvolumeclaims: "0"
        aws-slow-delete.storageclass.storage.k8s.io/requests.storage: "0"
        aws-slow-delete.storageclass.storage.k8s.io/persistentvolumeclaims: "0"
        ocs-generic-delete.storageclass.storage.k8s.io/requests.storage: "0"
        ocs-generic-delete.storageclass.storage.k8s.io/persistentvolumeclaims: "0"
        ocs-generic-retain.storageclass.storage.k8s.io/requests.storage: "0"
        ocs-generic-retain.storageclass.storage.k8s.io/persistentvolumeclaims: "0"
        ocs-fs-delete.storageclass.storage.k8s.io/requests.storage: "0"
        ocs-fs-delete.storageclass.storage.k8s.io/persistentvolumeclaims: "0"
        ocs-fs-retain.storageclass.storage.k8s.io/requests.storage: "0"
        ocs-fs-retain.storageclass.storage.k8s.io/persistentvolumeclaims: "0"
        ocs-storagecluster-ceph-rbd.storageclass.storage.k8s.io/requests.storage: "0"
        ocs-storagecluster-ceph-rbd.storageclass.storage.k8s.io/persistentvolumeclaims: "0"
        openshift-storage.noobaa.io.storageclass.storage.k8s.io/requests.storage: "0"
        openshift-storage.noobaa.io.storageclass.storage.k8s.io/persistentvolumeclaims: "0"
        pods: "10"
        services: "10"
        services.loadbalancers: "0"
        services.nodeports: "0"
        secrets: "35"
        configmaps: "5"
        replicationcontrollers: "0"
        openshift.io/imagestreams: "0"
        count/replicasets.apps: "10"
        count/daemonsets.apps: "0"
        count/deployments.apps: "10"
operator:
  context: 
    <<: *context
  subscription:
    enabled: true
    name: "quay-operator"
    namespace: "startx-quay"
    version: "3.3.2-20200903"
    operator: 
      channel: quay-v3.3
      name: quay-operator
      csv: red-hat-quay
      source: 
        name: redhat-operators
        namespace: openshift-marketplace
  operatorGroup:
    enabled: true
    name: "startx-quay"
    namespace: "startx-quay"
    providedAPIs: "QuayEcosystem.v1alpha1.redhatcop.redhat.io"
operatorsec:
  context: 
    <<: *context
  subscription:
    enabled: true
    name: "container-security-operator"
    namespace: "openshift-operators"
    version: "3.3.1"
    operator: 
      channel: quay-v3.3
      name: container-security-operator
      csv: container-security-operator
      source: 
        name: redhat-operators
        namespace: openshift-marketplace
  operatorGroup:
    enabled: false