apiVersion: redis.redis.opstreelabs.in/v1beta1
kind: RedisCluster
metadata:
  finalizers:
    - redisClusterFinalizer
  name: redis-cluster
  namespace: demo-redis
spec:
  clusterSize: 3
  clusterVersion: v7
  kubernetesConfig:
    image: 'quay.io/opstree/redis:v7.0.5'
    imagePullPolicy: IfNotPresent
    updateStrategy: {}
  persistenceEnabled: true
  redisExporter:
    enabled: true
    image: 'quay.io/opstree/redis-exporter:v1.44.0'
    imagePullPolicy: IfNotPresent
  redisFollower:
    livenessProbe:
      failureThreshold: 3
      initialDelaySeconds: 1
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 1
    readinessProbe:
      failureThreshold: 3
      initialDelaySeconds: 1
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 1
  redisLeader:
    livenessProbe:
      failureThreshold: 3
      initialDelaySeconds: 1
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 1
    readinessProbe:
      failureThreshold: 3
      initialDelaySeconds: 1
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 1
  storage:
    volumeClaimTemplate:
      metadata: {}
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
      status: {}
    volumeMount: {}
status: {}













{{- if .Values.cluster }}{{- if .Values.cluster.enabled }}
{{- $scope := .Values.context.scope -}}
{{- $ns := .Values.project.project.name | default .Chart.Name -}}


{{/* Loop over the cluster list */}}
{{- range .Values.cluster.list }}
{{- $name := .name | default "default-cluster" -}}
{{- if .enabled -}}

{{/* Create the admin secret if credentials are set */}}
{{- if .admin -}}{{- if .admin.username }}{{- if .admin.password }}
{{- $username := .admin.username | default "admin" }}
{{- $password := .admin.password | default "password123" }}
---
kind: Secret
apiVersion: v1
metadata:
  name: "{{- $name -}}-admin-auth"
  namespace: "{{- $ns -}}"
  labels:
    {{- include "cluster-redis.labels" $ | nindent 4 }}
    app.kubernetes.io/name: "{{- $name -}}-admin-auth-secret"
  annotations:
    {{- include "cluster-redis.annotations" $ | nindent 4 }}
    template.openshift.io/expose-username: "{.data['username']}"
    template.openshift.io/expose-password: "{.data['password']}"
stringData:
  admin: "{{- $username -}}:{{- $password -}}"
  username: "{{- $username -}}"
  password: "{{- $password -}}"
  users: "{{- $username -}}:{{- $password -}}"
{{- end -}}{{- end -}}{{- end -}}

{{/* Create the route ressource if admin is to be exposed */}}
{{- if .expose -}}{{- if .expose.enabled }}
---
kind: Route
apiVersion: route.openshift.io/v1
metadata:
  name: "{{- $name -}}-admin"
  namespace: "{{- $ns -}}"
  labels:
    {{- include "cluster-redis.labels" $ | nindent 4 }}
    app.kubernetes.io/name: "{{- $ns -}}-admin-route"
    redis_cluster: "{{- $name -}}"
    cluster: "{{- $name -}}"
  annotations:
    {{- include "cluster-redis.annotations" $ | nindent 4 }}
spec:
  to:
    kind: Service
    name: "{{- $name -}}-ui"
    weight: 100
  port:
    targetPort: redis-ui
  wildcardPolicy: None
{{- end -}}{{- end -}}

{{/* Create the RedisCluster resource */}}
{{- if .spec }}
---
kind: RedisCluster
apiVersion: redis.com/v2
metadata:
  name: "{{- $name -}}"
  namespace: "{{- $ns -}}"
  labels:
    {{- include "cluster-redis.labels" $ | nindent 4 }}
    app.kubernetes.io/name: "{{- $name -}}-rediscluster"
  annotations:
    {{- include "cluster-redis.annotations" $ | nindent 4 }}
spec: 
  {{- .spec | nindent 2 }}
{{- end -}}


{{/* Create the RedisBucket resource */}}
{{- if .buckets }}
{{- range .buckets }}
---
{{- if eq .kind "ephemeral" }}
kind: "RedisEphemeralBucket"
{{- else if eq .kind "memcached" }}
kind: "RedisMemcachedBucket"
{{- else }}
kind: "RedisBucket"
{{- end }}
apiVersion: redis.com/v2
metadata:
  name: "{{- .name | default "default-bucket" -}}"
  namespace: "{{- $ns -}}"
  labels:
    {{- include "cluster-redis.labels" $ | nindent 4 }}
    app.kubernetes.io/name: "{{- $name -}}-redisbucket"
    cluster: "{{- $name -}}"
  annotations:
    {{- include "cluster-redis.annotations" $ | nindent 4 }}
spec: 
  {{- .spec | nindent 2 }}
{{- end -}}
{{- end -}}

{{- end -}}{{- end -}}
{{- end -}}{{- end }}
