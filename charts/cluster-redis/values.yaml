# Default values for cluster-redis.

# Application deployment context
context:  &context
  # Name of the global scope for this application (organisational tenant)
  scope: myscope
  # Name of the cluster running this application (plateform tenant)
  cluster: default
  # Name of the environement for this application (ex: dev, factory, preprod or prod)
  environment: myenv
  # Component name of this application (logical tenant)
  component: mycomponent
  # Application name (functionnal tenant, default use Chart name)
  app: default-redis
  # Version name of this application (default use Chart appVersion)
  # version: "0.0.3"

# Configure the redis envionment
cluster:
  # Enable the configuration of the redis environement
  enabled: false
  # List of cluster to deploy
  list: 
    # name of the cluster
  - name: default-redis
    # the namespace used to deploy this cluster (default is the project name)
    namespace: demo-redis
    # Enable the creation and deployment of this cluster
    enabled: true
    # spec of the cluster configuration
    spec: |
      clusterSize: 3
      clusterVersion: v7
      kubernetesConfig:
        image: quay.io/opstree/redis:v7.0.5
        imagePullPolicy: IfNotPresent
        updateStrategy: {}
        resources:
          requests:
            cpu: 101m
            memory: 128Mi
          limits:
            cpu: 101m
            memory: 128Mi
      redisExporter:
        enabled: true
        image: 'quay.io/opstree/redis-exporter:v1.44.0'
        imagePullPolicy: IfNotPresent
      redisFollower:
        livenessProbe:
          failureThreshold: 3
          initialDelaySeconds: 1
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        readinessProbe:
          failureThreshold: 3
          initialDelaySeconds: 1
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
      redisLeader:
        livenessProbe:
          failureThreshold: 3
          initialDelaySeconds: 1
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        readinessProbe:
          failureThreshold: 3
          initialDelaySeconds: 1
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
      persistenceEnabled: true
      storage:
        volumeClaimTemplate:
          spec:
            storageClassName: gp3-csi
            accessModes:
              - ReadWriteOnce
            resources:
              requests:
                storage: 1Gi

# Configuration of the project (see https://helm-repository.readthedocs.io/en/latest/charts/project)
project: 
  enabled: false
  context: 
    <<: *context
  project: 
    enabled: false
    hooked: false
    type: project
    name: "openshift-operators"
    display_name: "Startx REDIS"
    description: Redis configured by STARTX
  serviceAccounts:
    enabled: true
    list: 
      - name: redis-operator
  rbac: 
    enabled: true
    sa:
    - id: redis-operator
      name: redis-operator
      type: cluster
      role: redis-opscr

# Configuration of the cluster-rbac (see https://helm-repository.readthedocs.io/en/latest/charts/cluster-rbac)
rbac:
  enabled: false
  context: 
    <<: *context
  roles:
    enabled: true
    list:
    - id: redis-opscr
      name: redis-opscr
      scope: global
      rules: |-
        - apiGroups:
          - redis.redis.opstreelabs.in
          resources:
          - rediscluster
          - redisrreplication
          - redissentinel
          - redis
          verbs:
          - list
          - watch
          - create
          - update
          - delete
        - apiGroups:
          - ""
          resources:
          - configmaps
          verbs:
          - get
          - create
          - update
        - apiGroups:
          - ""
          resources:
          - pods
          - services
          - persistentvolumeclaims
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - delete
        - apiGroups:
          - ""
          resources:
          - pods/exec
          verbs:
          - create
        - apiGroups:
          - ""
          resources:
          - events
          verbs:
          - list
          - create
          - update
        - apiGroups:
          - ""
          resources:
          - secrets
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - policy
          resources:
          - poddisruptionbudgets
          verbs:
          - get
          - create
          - delete
          - list
          - watch

# Configuration of the operator (see https://helm-repository.readthedocs.io/en/latest/charts/operator)
operator:
  enabled: false
  context: 
    <<: *context
  subscription:
    enabled: true
    hooked: false
    name: "redis-operator"
    namespace: "openshift-operators"
    version: "v0.15.1"
    operator: 
      channel: "stable"
      name: redis-operator
      installPlanApproval: Automatic
      # csv: redis-operator
      source: 
        name: community-operators
        namespace: openshift-marketplace
  operatorGroup:
    enabled: false
    hooked: false
    target: "all-ns"
    name: "redis-operator"
    namespace: "openshift-operators"
    providedAPIs: "RedisEnterpriseActiveActiveDatabase.v1alpha1.app.redislabs.com,RedisEnterpriseCluster.v1.app.redislabs.com,RedisEnterpriseDatabase.v1alpha1.app.redislabs.com,RedisEnterpriseRemoteCluster.v1alpha1.app.redislabs.com"
