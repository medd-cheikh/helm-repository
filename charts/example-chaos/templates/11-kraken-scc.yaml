{{- if .Values.kraken.enabled -}}
{{- $root := . -}}
{{- $appName := include "startx.appName" . -}}
{{- $namespace := .Values.kraken_project.project.name -}}
---
kind: SecurityContextConstraints 
apiVersion: security.openshift.io/v1
metadata:
  name: anyuid-kraken
  labels:
    app.kubernetes.io/name: "anyuid-kraken-scc"
    {{- include "example-chaos.labels" $root | nindent 4 }}
  annotations:
    {{- include "example-chaos.annotations" $root | nindent 4 }}
    kubernetes.io/description: 'allows anyuid access to host'
    release.openshift.io/create-only: "true"
users:
- system:serviceaccount:{{- $namespace -}}:default
- system:serviceaccount:{{- $namespace -}}:kraken
allowHostDirVolumePlugin: false
allowHostIPC: false
allowHostNetwork: false
allowHostPID: false
allowHostPorts: false
allowPrivilegeEscalation: true
allowPrivilegedContainer: false
allowedCapabilities: null
defaultAddCapabilities: null
fsGroup:
  type: RunAsAny
groups: []
priority: 10
readOnlyRootFilesystem: false
requiredDropCapabilities:
- MKNOD
runAsUser:
  type: RunAsAny
seLinuxContext:
  type: MustRunAs
supplementalGroups:
  type: RunAsAny
volumes:
- configMap
- downwardAPI
- emptyDir
- persistentVolumeClaim
- projected
- secret
---
kind: SecurityContextConstraints 
apiVersion: security.openshift.io/v1
metadata:
  name: privilegied-kraken
  labels:
    app.kubernetes.io/name: "privilegied-kraken-scc"
    {{- include "example-chaos.labels" $root | nindent 4 }}
  annotations:
    {{- include "example-chaos.annotations" $root | nindent 4 }}
    kubernetes.io/description: 'allows privilegied access to host'
    release.openshift.io/create-only: "true"
users:
- system:serviceaccount:{{- $namespace -}}:default
- system:serviceaccount:{{- $namespace -}}:kraken
allowHostDirVolumePlugin: true
allowHostIPC: true
allowHostNetwork: true
allowHostPID: true
allowHostPorts: true
allowPrivilegeEscalation: true
allowPrivilegedContainer: true
allowedCapabilities:
- '*'
allowedUnsafeSysctls:
- '*'
defaultAddCapabilities: null
fsGroup:
  type: RunAsAny
groups: []
priority: null
readOnlyRootFilesystem: false
requiredDropCapabilities: null
runAsUser:
  type: RunAsAny
seLinuxContext:
  type: RunAsAny
seccompProfiles:
- '*'
supplementalGroups:
  type: RunAsAny
users:
- system:serviceaccount:{{- $namespace -}}:kraken
volumes:
- '*'
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: privilegied-kraken-scc-role
  namespace: {{ $namespace | default "default" | quote }}
  labels:
    app.kubernetes.io/name: "privilegied-kraken-scc-role"
    {{- include "example-chaos.labels" $root | nindent 4 }}
  annotations:
    {{- include "example-chaos.annotations" $root | nindent 4 }}
rules:
  - apiGroups: ["security.openshift.io"]
    resources: ["securitycontextconstraints"]
    resourceNames: ["anyuid-kraken", "privilegied-kraken"]
    verbs: ["use"]
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: privilegied-kraken-scc-rb
  namespace: {{ $namespace | default "default" | quote }}
  labels:
    app.kubernetes.io/name: "privilegied-kraken-scc-rb"
    {{- include "example-chaos.labels" $root | nindent 4 }}
  annotations:
    {{- include "example-chaos.annotations" $root | nindent 4 }}
subjects:
  - kind: ServiceAccount
    name: default
  - kind: ServiceAccount
    name: kraken
roleRef:
  kind: Role
  name: privilegied-kraken-scc-role
  apiGroup: rbac.authorization.k8s.io
{{- end -}}
