{{- if .Values.kraken.enabled -}}
{{- $root := . -}}
{{- $appName := include "startx.appName" . -}}
{{- $namespace := .Values.kraken_project.project.name -}}
{{- if eq .Values.kraken.mode "job" -}}{{- if .Values.kraken.job -}}
{{- with .Values.kraken.job }}
---
apiVersion: batch/v1
kind: Job
metadata:
  name: "{{- .prefix -}}"
  namespace: "{{- $namespace -}}"
  labels:
    app.kubernetes.io/name: "{{- .prefix -}}-job"
    {{- include "example-chaos.labels" $root | nindent 4 }}
    tool: kraken
  annotations:
    {{- include "example-chaos.annotations" $root | nindent 4 }}
spec:
  backoffLimit: 0
  completions: 1
  parallelism: 1
  suspend: false
  template:
    metadata:
      labels:
        tool: kraken
        app: {{ .prefix | quote }}
    spec:
      containers:
      - name: kraken
        image: quay.io/chaos-kubox/krkn
        imagePullPolicy: Always
        args:
          - python3 run_kraken.py -c config/config.yaml
        command:
          - /bin/sh
          - -c
        env:
          - name: KUBECONFIG
        {{- if $root.Values.kraken.aws }}{{- if $root.Values.kraken.aws.enabled }}
        envFrom:
          - secretRef:
              name: kraken-aws-creds
        {{- end }}{{- end }}
        resources: {}
        securityContext:
          privileged: true
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /root/.kube/config
          name: kube-config
          subPath: config
        - mountPath: /root/kraken/scenarios
          name: kraken-scenarios-config
        - mountPath: /root/kraken/config/config.yaml
          name: kraken-config
          subPath: config.yaml
        - mountPath: /root/kraken/kube_burner.yaml
          name: kraken-config-common
          subPath: kube_burner.yaml
        - mountPath: /root/kraken/metrics-aggregated.yaml
          name: kraken-config-common
          subPath: metrics-aggregated.yaml
        - mountPath: /root/kraken/startx_alerts.yaml
          name: kraken-config-common
          subPath: startx_alerts.yaml
      restartPolicy: Never
      serviceAccount: kraken
      terminationGracePeriodSeconds: 10
      volumes:
      - name: kube-config
        configMap:
          defaultMode: 420
          name: kraken-kubeconfig
      - name: kraken-config
        configMap:
          defaultMode: 420
          name: kraken-config-all
          items:
          - key: config.yaml
            path: config.yaml
      - name: kraken-scenarios-config
        configMap:
          defaultMode: 420
          name: kraken-scenarios-config
      - name: kraken-config-common
        configMap:
          defaultMode: 420
          name: kraken-config-common
          items:
          - key: startx_alerts.yaml
            path: startx_alerts.yaml
          - key: kube_burner.yaml
            path: kube_burner.yaml
          - key: metrics-aggregated.yaml
            path: metrics-aggregated.yaml
{{- end -}}{{- end -}}{{- end -}}
{{- end -}}
