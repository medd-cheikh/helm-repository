# Default values for cluster-odf.

# Application deployment context
context:  &context
  # Name of the global scope for this application (organisational tenant)
  scope: myscope
  # Name of the cluster running this application (plateform tenant)
  cluster: default
  # Name of the environement for this application (ex: dev, factory, preprod or prod)
  environment: myenv
  # Component name of this application (logical tenant)
  component: mycomponent
  # Application name (functionnal tenant, default use Chart name)
  app: default-odf
  # Version name of this application (default use Chart appVersion)
  # version: "0.0.3"

# configuration of the Storage service
odf:
  # Enable the deployment of a ODF cluster
  enabled: false
  # Activate the manager as a helm hook
  hooked: false
  # Redhat Network access user to the RH container catalog
  name: default-odf
  # Version of the ODF to use for this cluster
  version: "4.8.0"
  # Configure storage backend for this cluster
  storage:
    # Name of the storage pool
  - name: odf-deviceset
    # Number of OSD replicas
    replicas: 3
    # Number of OSD count
    count: 1
    # configuration of the OSD pods
    config: {}
    # Ressource sizing for OSD pods
    resources: {}
    # placement rules for OSD pods
    placement: {}
    # preparePlacement rules for OSD pods
    preparePlacement: {}
    # Size of each OSD storage volume
    size: 512Gi
    # Storage class used to provision OSD storage
    storageClass: startx-aws-generic-retain

# Configuration of the project (see https://helm-repository.readthedocs.io/en/latest/charts/project)
project: 
  enabled: false
  context: 
    <<: *context
  project: 
    enabled: true
    type: project
    name: "openshift-storage"
    display_name: Operator ODF
    description: Openshift Container Storage operators configured by startx
  rbac: 
    enabled: false
  networkpolicy: 
    enabled: false
  limits: 
    enabled: false
  quotas: 
    enabled: false

# Configuration of the operator (see https://helm-repository.readthedocs.io/en/latest/charts/operator)
operator:
  enabled: false
  context: 
    <<: *context
  subscription:
    enabled: true
    name: "odf-operator"
    namespace: "openshift-storage"
    version: "v4.16.3-rhodf"
    operator: 
      channel: stable-4.16
      name: odf-operator
      installPlanApproval: Automatic
      # csv: odf-operator
      source: 
        name: redhat-operators
        namespace: openshift-marketplace
      config: 
        infra: true
  consolePlugin:
    enabled: true
    name: "odf-console"
    spec: |
      backend:
        service:
          basePath: /
          name: odf-console-service
          namespace: openshift-storage
          port: 9001
        type: Service
      displayName: ODF Plugin
      i18n:
        loadType: ''
      proxy:
        - alias: provider-proxy
          authorization: UserToken
          endpoint:
            service:
              name: ux-backend-proxy
              namespace: openshift-storage
              port: 8888
            type: Service
  operatorGroup:
    enabled: true
    name: "openshift-storage"
    namespace: "openshift-storage"
    providedAPIs: "BackingStore.v1alpha1.noobaa.io,BucketClass.v1alpha1.noobaa.io,CephBlockPool.v1.ceph.rook.io,CephClient.v1.ceph.rook.io,CephCluster.v1.ceph.rook.io,CephFilesystem.v1.ceph.rook.io,CephFilesystemMirror.v1.ceph.rook.io,CephNFS.v1.ceph.rook.io,CephObjectRealm.v1.ceph.rook.io,CephObjectStore.v1.ceph.rook.io,CephObjectStoreUser.v1.ceph.rook.io,CephObjectZone.v1.ceph.rook.io,CephObjectZoneGroup.v1.ceph.rook.io,CephRBDMirror.v1.ceph.rook.io,NamespaceStore.v1alpha1.noobaa.io,NooBaa.v1alpha1.noobaa.io,ODFInitialization.v1.odf.openshift.io,ObjectBucket.v1alpha1.objectbucket.io,ObjectBucketClaim.v1alpha1.objectbucket.io,StorageCluster.v1.odf.openshift.io,StorageSystem.v1alpha1.odf.openshift.io,VolumeReplication.v1alpha1.replication.storage.openshift.io,VolumeReplicationClass.v1alpha1.replication.storage.openshift.io"

