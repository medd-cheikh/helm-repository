
# Default values for configuration of a dev demo
# see values.compliance for explanation on each params
context: &context
  scope: startx
  cluster: default
  environment: demo
  component: demo-compliance
  app: demo-compliance-project
  # version: "0.0.1"  
enabled: true
project: 
  enabled: true
  hooked: false
  type: project
  name: "demo-compliance"
  display_name: "Demo COMPLIANCE"
  description: "Demo on the compliance operator"
rbac: 
  enabled: true
  groups: 
  - id: dev
    name: dev
    role: view
  - id: devops
    name: devops
    role: edit
  - id: ops
    name: ops
    role: admin
networkpolicy: 
  enabled: false
  rules: []
limits: 
  enabled: true
  rules:  |
    limits:
      - type: "Pod"
        max:
          cpu: 2
          memory: "4Gi"
      - type: "Container"
        default:
          cpu: "250m"
          memory: "256Mi"
        defaultRequest:
          cpu: "100m"
          memory: "128Mi"
        max:
          cpu: 2
          memory: "4Gi"
quotas: 
  enabled: true
  rules:  |
    hard:
      limits.cpu: "20000m"
      limits.memory: "2128Mi"
      requests.cpu: "2100m"
      requests.memory: "1264Mi"
      requests.storage: "10Gi"
      persistentvolumeclaims: "10"
      ephemeral-storage: "10"
      gp2.storageclass.storage.k8s.io/requests.storage: "100Gi"
      gp2.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
      aws-generic-retain.storageclass.storage.k8s.io/requests.storage: "0"
      aws-generic-retain.storageclass.storage.k8s.io/persistentvolumeclaims: "0"
      aws-generic-delete.storageclass.storage.k8s.io/requests.storage: "0"
      aws-generic-delete.storageclass.storage.k8s.io/persistentvolumeclaims: "0"
      aws-fast-retain.storageclass.storage.k8s.io/requests.storage: "0"
      aws-fast-retain.storageclass.storage.k8s.io/persistentvolumeclaims: "0"
      aws-fast-delete.storageclass.storage.k8s.io/requests.storage: "0"
      aws-fast-delete.storageclass.storage.k8s.io/persistentvolumeclaims: "0"
      aws-slow-retain.storageclass.storage.k8s.io/requests.storage: "0"
      aws-slow-retain.storageclass.storage.k8s.io/persistentvolumeclaims: "0"
      aws-slow-delete.storageclass.storage.k8s.io/requests.storage: "0"
      aws-slow-delete.storageclass.storage.k8s.io/persistentvolumeclaims: "0"
      ocs-generic-delete.storageclass.storage.k8s.io/requests.storage: "0"
      ocs-generic-delete.storageclass.storage.k8s.io/persistentvolumeclaims: "0"
      ocs-generic-retain.storageclass.storage.k8s.io/requests.storage: "0"
      ocs-generic-retain.storageclass.storage.k8s.io/persistentvolumeclaims: "0"
      ocs-fs-delete.storageclass.storage.k8s.io/requests.storage: "0"
      ocs-fs-delete.storageclass.storage.k8s.io/persistentvolumeclaims: "0"
      ocs-fs-retain.storageclass.storage.k8s.io/requests.storage: "0"
      ocs-fs-retain.storageclass.storage.k8s.io/persistentvolumeclaims: "0"
      ocs-storagecluster-ceph-rbd.storageclass.storage.k8s.io/requests.storage: "0"
      ocs-storagecluster-ceph-rbd.storageclass.storage.k8s.io/persistentvolumeclaims: "0"
      ocs-storagecluster-ceph-rbd.storageclass.storage.k8s.io/requests.storage: "0"
      ocs-storagecluster-ceph-rbd.storageclass.storage.k8s.io/persistentvolumeclaims: "0"
      openshift-storage.noobaa.io.storageclass.storage.k8s.io/requests.storage: "0"
      openshift-storage.noobaa.io.storageclass.storage.k8s.io/persistentvolumeclaims: "0"
      pods: "30"
      services: "40"
      services.loadbalancers: "0"
      services.nodeports: "10"
      secrets: "40"
      configmaps: "40"
      replicationcontrollers: "10"
      openshift.io/imagestreams: "10"
      count/replicasets.apps: "10"
      count/daemonsets.apps: "0"
      count/deployments.apps: "10"
