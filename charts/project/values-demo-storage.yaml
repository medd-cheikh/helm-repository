
# Default values for configuration of a dev demo
# see values.storage for explanation on each params
context: 
  scope: startx
  cluster: localhost
  environment: demo
  component: demo-storage
  app: demo-storage-project
  version: "0.0.1"  
enabled: true
project: 
  enabled: true
  hooked: false
  type: project
  name: "demo-storage"
  display_name: "Demo STORAGE"
  description: "Demo on various persistent storage backend"
rbac: 
  enabled: true
  groups: 
  - id: dev
    name: dev
    role: view
  - id: devops
    name: devops
    role: edit
  - id: ops
    name: ops
    role: admin
networkpolicy: 
  enabled: false
  rules: []
limits: 
  enabled: true
  rules:  |
    limits:
      - type: "Pod"
        min:
          cpu: "10m"
          memory: "16Mi"
        max:
          cpu: 1600m
          memory: 1512Mi
      - type: "Container"
        default:
          cpu: 100m
          memory: 128Mi
        defaultRequest:
          cpu: 10m
          memory: 16Mi
        min:
          cpu: "10m"
          memory: "16Mi"
        max:
          cpu: 250m
          memory: 128Mi
quotas: 
  enabled: true
  rules:  |
    hard:
      limits.cpu: "8900m"
      limits.memory: "10200Mi"
      requests.cpu: "2500m"
      requests.memory: "6200Mi"
      requests.storage: "50Gi"
      persistentvolumeclaims: "30"
      ephemeral-storage: "2"
      gp2.storageclass.storage.k8s.io/requests.storage: "2Gi"
      gp2.storageclass.storage.k8s.io/persistentvolumeclaims: "2"
      aws-generic-retain.storageclass.storage.k8s.io/requests.storage: "10Gi"
      aws-generic-retain.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
      aws-generic-delete.storageclass.storage.k8s.io/requests.storage: "3Gi"
      aws-generic-delete.storageclass.storage.k8s.io/persistentvolumeclaims: "3"
      aws-fast-retain.storageclass.storage.k8s.io/requests.storage: "2Gi"
      aws-fast-retain.storageclass.storage.k8s.io/persistentvolumeclaims: "2"
      aws-fast-delete.storageclass.storage.k8s.io/requests.storage: "2Gi"
      aws-fast-delete.storageclass.storage.k8s.io/persistentvolumeclaims: "2"
      aws-slow-retain.storageclass.storage.k8s.io/requests.storage: "2Gi"
      aws-slow-retain.storageclass.storage.k8s.io/persistentvolumeclaims: "2"
      aws-slow-delete.storageclass.storage.k8s.io/requests.storage: "2Gi"
      aws-slow-delete.storageclass.storage.k8s.io/persistentvolumeclaims: "2"
      ocs-generic-delete.storageclass.storage.k8s.io/requests.storage: "2Gi"
      ocs-generic-delete.storageclass.storage.k8s.io/persistentvolumeclaims: "2"
      ocs-generic-retain.storageclass.storage.k8s.io/requests.storage: "8Gi"
      ocs-generic-retain.storageclass.storage.k8s.io/persistentvolumeclaims: "8"
      ocs-fs-delete.storageclass.storage.k8s.io/requests.storage: "2Gi"
      ocs-fs-delete.storageclass.storage.k8s.io/persistentvolumeclaims: "2"
      ocs-fs-retain.storageclass.storage.k8s.io/requests.storage: "4Gi"
      ocs-fs-retain.storageclass.storage.k8s.io/persistentvolumeclaims: "4"
      ocs-storagecluster-ceph-rbd.storageclass.storage.k8s.io/requests.storage: "2Gi"
      ocs-storagecluster-ceph-rbd.storageclass.storage.k8s.io/persistentvolumeclaims: "2"
      openshift-storage.noobaa.io.storageclass.storage.k8s.io/requests.storage: "2Gi"
      openshift-storage.noobaa.io.storageclass.storage.k8s.io/persistentvolumeclaims: "2"
      pods: "75"
      services: "40"
      services.loadbalancers: "0"
      services.nodeports: "0"
      secrets: "90"
      configmaps: "90"
      replicationcontrollers: "10"
      openshift.io/imagestreams: "0"
      count/daemonsets.apps: "0"
      count/replicasets.apps: "45"
      count/deployments.apps: "40"
