

# # Use it to Overwrite the helm-chart name
#nameOverride: project
# # Use it to Overwrite the helm-chart version
#versionOverride: "0.0.1"

# Application deployment context
context:  &context
  # Name of the global scope for this application (organisational tenant)
  scope: myscope
  # Name of the cluster running this application (plateform tenant)
  cluster: default
  # Name of the environement for this application (ex: dev, factory, preprod or prod)
  environment: myenv
  # Component name of this application (logical tenant)
  component: project
  # Application name (functionnal tenant, default use Chart name)
  app: default-project
  # Version name of this application (default use Chart appVersion)
  version: "0.0.1"

# enable the basic chart globally
enabled: true
# Project configuration
project: 
  # Enable creation and management of the project
  enabled: true
  # Enable location of resources into infra node
  infra: false
  # Type of project to create (namespace or project)
  type: project
  # Name of the project
  name: default-project
  # Project or namespace is started as an helm hook (default is false)
  hooked: false
  # # NodeSelector filter to apply to project workloads (default is false)
  # nodeSelector: "node-role.kubernetes.io/worker="
  # # Display name of the project (only for project)
  # display_name: Example project
  # # Description of the project (only for project)
  # description: This is an default project created via Helm

# Configure RBAC for project
rbac: 
  # Enable RBAC default for this project
  enabled: false
  # # List groups to authorize on this project
  groups: []
  # # Example group ID
  # - id: mygroup
  #   # Example group name
  #   name: mygroup_example
  #   # Example group role in this project
  #   role: basic-user
  # - id: mygroupcluster
  #   # Example group name
  #   name: mygroupcluster_example
  #   # Example of a clusterRoleBinding
  #   type: cluster
  #   # Example group role in this project
  #   role: edit
  # # List users to authorize on this project
  users: []
  # # Example user ID
  # - id: myuser
  #   # Example user name
  #   name: myuser_example
  #   # Example user role in this project
  #   role: basic-user

# Configure NetworkPolicy for project
networkpolicy: 
  # Enable NetworkPolicy default for this project
  enabled: false
  # List group to create
  rules: []
  # # allow from external
  # - id: allow-from-openshift-ingress
  #   # Specifications of this policy rule
  #   spec: |
  #     ingress:
  #     - from:
  #         - namespaceSelector:
  #             matchLabels:
  #               network.openshift.io/policy-group: ingress
  #     podSelector: {}
  #     policyTypes:
  #     - Ingress
  # # allow from internal
  # - id: allow-from-same-namespace
  #   # Specifications of this policy rule
  #   spec: |
  #     podSelector: {}
  #     ingress:
  #     - from:
  #       - podSelector: {}

# Configure limitRange for project
limits: 
  # Enable limitRange default for this project
  enabled: false
  # Specification of the limitRange ressource
  rules:  |
    limits:
      - type: "Pod"
        max:
          cpu: 200m
          memory: 256Mi
      - type: "Container"
        max:
          cpu: 100m
          memory: 128Mi

# Configure quotas for project
quotas: 
  # Enable quotas default for this project
  enabled: false
  # Specification of the quotas ressource
  rules: |
    hard:
      limits.cpu: "400m"
      limits.memory: "1024Mi"
      requests.cpu: "400m"
      requests.memory: "512Mi"
      persistentvolumeclaims: "0"
      pods: "4"
      services: "2"

# Configure serviceAccounts for project
serviceAccounts:
  # Enable serviceAccounts for this project
  enabled: false
  # List of the credentials to record
  list: []
    #   # Name of the service account (default is default)
    # - name: default
    #   # List of the imagePullSecrets to link to this SA
    #   imagePullSecrets: []
    #     # Name of the secret with registry credentials
    #     - name: startx-registrycreds-quay
    #     # Name of the namespace where the secret reside (default is same project)
    #       namespace: default-project

# Configuration of the registry credentials at the project level
dockercfg:
  # Enable the project docker credentials
  enabled: false
  # List of the credentials to record
  list: []
    #   # Name of the credential secret (default is registrycreds)
    # - name: startx-registrycreds-quay
    #   # Namespace (default is the context.name)
    #   namespace: default-project
    #   # Name of the registry
    #   registry: quay.io
    #   # Username to use for authentification
    #   username: startx
    #   # Password associated to the user (could be a token)
    #   password: xxxx
    #   # email associated to the user 
    #   email: xxxx

# Configuration of the serviceMonitor at the project level
serviceMonitor:
  # Enable the project serviceMonitor
  enabled: false
  # List of the serviceMonitor to create
  list: []
    #   # Name of the serviceMonitor (default is my-default-service-monitor)
    # - name: startx-example-service-monitor
    #   # Namespace (default is the context.name)
    #   namespace: default-project
    #   # The specification of the monitor
    #   spec: |
    #     endpoints:
    #     - interval: 30s
    #       port: web
    #       scheme: http
    #     selector:
    #       matchLabels:
    #         app: prometheus-example-app

# Configuration of the podMonitor at the project level
podMonitor:
  # Enable the project podMonitor
  enabled: false
  # List of the podMonitor to create
  list: []
    #   # Name of the podMonitor (default is my-default-pod-monitor)
    # - name: startx-example-pod-monitor
    #   # Namespace (default is the context.name)
    #   namespace: default-project
    #   # The specification of the monitor
    #   spec: |
    #     podMetricsEndpoints:
    #     - interval: 30s
    #       port: web
    #       scheme: http
    #     selector:
    #       matchLabels:
    #         app: prometheus-example-app
