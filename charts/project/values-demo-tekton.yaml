
# Default values for configuration of a dev demo
# see values.tekton for explanation on each params
context: &context
  scope: startx
  cluster: default
  environment: demo
  component: demo-tekton
  app: demo-tekton-project
  version: "0.0.1"  
enabled: true
project: 
  enabled: true
  hooked: false
  type: project
  name: "demo-tekton"
  display_name: "Demo TEKTON"
  description: "Demo on Tekton Pipeline"
rbac: 
  enabled: true
  groups: 
  - id: dev
    name: dev
    role: view
  - id: devops
    name: devops
    role: edit
  - id: ops
    name: ops
    role: admin
networkpolicy: 
  enabled: false
  rules: []
limits: 
  enabled: true
  rules:  |
    limits:
      - type: "Pod"
        min:
          cpu: "0"
          memory: "0"
        max:
          cpu: 2
          memory: 2Gi
      - type: "Container"
        default:
          cpu: 200m
          memory: 256Mi
        defaultRequest:
          cpu: 200m
          memory: 256Mi
        min:
          cpu: "0"
          memory: "0"
        max:
          cpu: 750m
          memory: 1024Mi
quotas: 
  enabled: true
  rules:  |
    hard:
      limits.cpu: "20"
      limits.memory: "40Gi"
      requests.cpu: "12"
      requests.memory: "18Gi"
      requests.storage: "25Gi"
      persistentvolumeclaims: "5"
      ephemeral-storage: "0" 
      gp2.storageclass.storage.k8s.io/requests.storage: "4Gi"
      gp2.storageclass.storage.k8s.io/persistentvolumeclaims: "2"
      aws-generic-retain.storageclass.storage.k8s.io/requests.storage: "5Gi"
      aws-generic-retain.storageclass.storage.k8s.io/persistentvolumeclaims: "2"
      aws-generic-delete.storageclass.storage.k8s.io/requests.storage: "2Gi"
      aws-generic-delete.storageclass.storage.k8s.io/persistentvolumeclaims: "2"
      aws-fast-retain.storageclass.storage.k8s.io/requests.storage: "0"
      aws-fast-retain.storageclass.storage.k8s.io/persistentvolumeclaims: "0"
      aws-fast-delete.storageclass.storage.k8s.io/requests.storage: "0"
      aws-fast-delete.storageclass.storage.k8s.io/persistentvolumeclaims: "0"
      aws-slow-retain.storageclass.storage.k8s.io/requests.storage: "0"
      aws-slow-retain.storageclass.storage.k8s.io/persistentvolumeclaims: "0"
      aws-slow-delete.storageclass.storage.k8s.io/requests.storage: "0"
      aws-slow-delete.storageclass.storage.k8s.io/persistentvolumeclaims: "0"
      ocs-generic-delete.storageclass.storage.k8s.io/requests.storage: "0"
      ocs-generic-delete.storageclass.storage.k8s.io/persistentvolumeclaims: "0"
      ocs-generic-retain.storageclass.storage.k8s.io/requests.storage: "0"
      ocs-generic-retain.storageclass.storage.k8s.io/persistentvolumeclaims: "0"
      ocs-fs-delete.storageclass.storage.k8s.io/requests.storage: "0"
      ocs-fs-delete.storageclass.storage.k8s.io/persistentvolumeclaims: "0"
      ocs-fs-retain.storageclass.storage.k8s.io/requests.storage: "0"
      ocs-fs-retain.storageclass.storage.k8s.io/persistentvolumeclaims: "0"
      ocs-storagecluster-ceph-rbd.storageclass.storage.k8s.io/requests.storage: "0"
      ocs-storagecluster-ceph-rbd.storageclass.storage.k8s.io/persistentvolumeclaims: "0"
      openshift-storage.noobaa.io.storageclass.storage.k8s.io/requests.storage: "0"
      openshift-storage.noobaa.io.storageclass.storage.k8s.io/persistentvolumeclaims: "0"
      pods: "20"
      services: "10"
      secrets: "50"
      configmaps: "50"
      replicationcontrollers: "25"
      openshift.io/imagestreams: "10"
