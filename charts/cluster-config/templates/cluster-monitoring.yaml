{{- if .Values.monitoring.enabled -}}
kind: ConfigMap
apiVersion: v1
metadata:
  name: cluster-monitoring-config
  namespace: openshift-monitoring
  labels:
    {{- include "cluster-config.labels" . | nindent 4 }}
    app.kubernetes.io/name: "{{- include "startx.appName" . -}}-alertmanager-{{- include "startx.appVersion" . -}}"
  annotations:
    {{- include "cluster-config.annotations" . | nindent 4 }}
data:
  config.yaml: |
    prometheusOperator:
      {{- if .Values.monitoring.infra_enabled }}
      nodeSelector:
        node-role.kubernetes.io/infra: '' 
      tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/infra
          operator: Exists
      {{- end }}
    {{- if .Values.monitoring.enableUserWorkload }}
    enableUserWorkload: true
    {{- end }}
    grafana:
      {{- if .Values.monitoring.infra_enabled }}
      nodeSelector: 
        node-role.kubernetes.io/infra: ''
      tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/infra
          operator: Exists
      {{- end }}
    k8sPrometheusAdapter:
      {{- if .Values.monitoring.infra_enabled }}
      nodeSelector: 
        node-role.kubernetes.io/infra: ''
      tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/infra
          operator: Exists
      {{- end }}
    kubeStateMetrics:
      {{- if .Values.monitoring.infra_enabled }}
      nodeSelector: 
        node-role.kubernetes.io/infra: ''
      tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/infra
          operator: Exists
      {{- end }}
    telemeterClient:
      {{- if .Values.monitoring.infra_enabled }}
      nodeSelector: 
        node-role.kubernetes.io/infra: ''
      tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/infra
          operator: Exists
      {{- end }}
    openshiftStateMetrics:
      {{- if .Values.monitoring.infra_enabled }}
      nodeSelector: 
        node-role.kubernetes.io/infra: ''
      tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/infra
          operator: Exists
      {{- end }}
    thanosQuerier:
      {{- if .Values.monitoring.infra_enabled }}
      nodeSelector: 
        node-role.kubernetes.io/infra: ''
      tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/infra
          operator: Exists
      {{- end }}
    prometheus: 
      retention: {{ default "7d" .Values.monitoring.retentionPeriod }}
      resources:
        requests:
          cpu: 200m 
          memory: 2Gi
    prometheusK8s: 
      {{- if .Values.monitoring.infra_enabled }}
      nodeSelector: 
        node-role.kubernetes.io/infra: ''
      tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/infra
          operator: Exists
      {{- end }}
      volumeClaimTemplate:
       spec:
         storageClassName: {{ default "gp3-csi" .Values.monitoring.storageClass }}
         volumeMode: Filesystem
         resources:
           requests:
             storage: {{ default "20Gi" .Values.monitoring.storageSize }}
      externalLabels:
        scope: {{ include "startx.appScope" . | quote }}
        cluster: {{ include "startx.appCluster" . | quote }}
        environment: {{ include "startx.appEnvironment" . | quote }}
    alertmanagerMain:
      {{- if .Values.monitoring.infra_enabled }}
      nodeSelector: 
        node-role.kubernetes.io/infra: ''
      tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/infra
          operator: Exists
      {{- end }}
      {{- if .Values.monitoring.enableUserWorkload }}
      enableUserAlertmanagerConfig: true
      {{- end }}
      volumeClaimTemplate:
        spec:
          storageClassName: {{ default "gp3-csi" .Values.monitoring.storageClass }}
          resources:
            requests:
             storage: {{ default "20Gi" .Values.monitoring.storageSize }}
{{- end -}}
