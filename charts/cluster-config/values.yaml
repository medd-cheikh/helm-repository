# Default values for cluster-config.

# Application deployment context
context: &context
  # Name of the global scope for this application (organisational tenant)
  scope: myscope
  # Name of the cluster running this application (plateform tenant)
  cluster: default
  # Name of the environement for this application (ex: dev, factory, preprod or prod)
  environment: myenv
  # Component name of this application (logical tenant)
  component: mycomponent
  # Application name (functionnal tenant, default use Chart name)
  app: default-config
  # Version name of this application (default use Chart appVersion)
  # version: "0.0.3"

# TODO Comment this section
api: 
  enabled: false
  name: api-tls
  url: api.mycluster.local
  certificateChain: |-
    -----BEGIN CERTIFICATE-----
    XXXXXXX
    -----END CERTIFICATE-----
    -----BEGIN CERTIFICATE-----
    XXXXXXX
    -----END CERTIFICATE-----
    -----BEGIN CERTIFICATE-----
    XXXXXXX
    -----END CERTIFICATE-----
    -----BEGIN CERTIFICATE-----
    XXXXXXX
    -----END CERTIFICATE-----
    -----BEGIN CERTIFICATE-----
    XXXXXXX
    -----END CERTIFICATE-----
    -----BEGIN CERTIFICATE-----
    XXXXXXX
    -----END CERTIFICATE-----
  # certificateChainRaw: >-
  #   LS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJRVdqeHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4
  #   eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eAp4eHh4eHh4eHh4eHh4eHh4eHh4eHh4
  #   eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4Cnh4eHh4eHh4eHh4eHh4
  #   eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHgKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tL
  privateKey: |-
    -----BEGIN RSA PRIVATE KEY-----
    XXXXXXX
    -----END RSA PRIVATE KEY-----
  # privateKeyRaw: >-
  #   LS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJRVdqeHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4
  #   eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eAp4eHh4eHh4eHh4eHh4eHh4eHh4eHh4
  #   eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4Cnh4eHh4eHh4eHh4eHh4
  #   eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHgKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tL


# Configuration of the cluster auto-scaling feature
autoscaling:
  # Enable the cluster auto-scaling
  enabled: false
  # Define the minimum
  min: 
    # Minimum cores accross cluster
    cores: 4
    # Minimum gigabytes of memory accross cluster
    memory: 16
    # Minimum numbers of nodes
    nodes: 2
  # Define the maximum
  max: 
    # Maximum cores accross cluster
    cores: 40
    # Maximum gigabytes of memory accross cluster
    memory: 160
    # Maximum numbers of nodes
    nodes: 20
  # Enable scale down feature
  scaleDown: true


# Configuration of the cluster-version feature
clusterversion:
  # Enable the cluster-version
  enabled: false
  # Define the related channel
  channel: candidate
  # The clusterID used in clusterversion resource
  clusterID: "xxxxx-xxxx-xxxxxx"
  # Define the maximum
  version: "4.14"
  # Define the targeted applyed version (if cluster update are managed in a gitops way)
  desiredVersion: 4.14.6

# Configuration of the cluster alert-manager feature
alertmanager:
  # Enable the cluster alert-manager
  enabled: false
  # Define the type of alert receiver (pagerDutty, config or api)
  type: pagerDutty
  # Define the related channel
  receiverName: PagerDutyStartx
  # PagerDutty specific params
  pagerDutty:
    # PagerDutty application key
    key: _pager_dutty_key_
  # API specific params
  api:
    # API endpoint for receiver
    endpoint: _api_endpoint_
  # Config specific params
  config: |-
    global:
      resolve_timeout: 5m
      smtp_from: mycluster@example.com
      smtp_smarthost: 'mysmtphost:25'
      smtp_hello: smtp
      smtp_require_tls: false
    inhibit_rules:
      - equal:
          - namespace
          - alertname
        source_matchers:
          - severity = critical
        target_matchers:
          - severity =~ warning|info
      - equal:
          - namespace
          - alertname
        source_matchers:
          - severity = warning
        target_matchers:
          - severity = info
      - equal:
          - namespace
        source_matchers:
          - alertname = InfoInhibitor
        target_matchers:
          - severity = info
    receivers:
      - name: Default
        email_configs:
          - to: alert@example.com
      - name: Watchdog
      - name: Critical
        email_configs:
          - to: alert@example.com
      - name: 'null'
    route:
      group_by:
        - namespace
      group_interval: 5m
      group_wait: 30s
      receiver: Default
      repeat_interval: 12h
      routes:
        - matchers:
            - alertname = Watchdog
          receiver: Watchdog
        - matchers:
            - alertname = InfoInhibitor
          receiver: 'null'
        - receiver: Critical
          match:
            severity: critical

# Configuration of the cluster monitoring feature
monitoring:
  # Enable the cluster monitoring personnalisation
  enabled: false
  # Enable the deployment of the logging service into infra nodes
  infra_enabled: false
  # Define the storage class to use for persistance (default is gp3-csi)
  storageClass: gp3-csi
  # Define the storage size to use for persistance (default is 20Gi)
  storageSize: "20Gi"
  # Define the storage size to use for persistance of alertManager (default is 5Gi)
  storageSizeAlert: "5Gi"
  # Enabling monitoring for user-defined projects (see https://docs.openshift.com/container-platform/4.14/monitoring/enabling-monitoring-for-user-defined-projects.html)
  enableUserWorkload: true
  # Define the prometheus retention period (default is 7d)
  retentionPeriod: 7d

# Configuration of the cluster proxy feature
proxy:
  # Enable the cluster proxy
  enabled: false
  # CA bundle used by proxy
  CABundle:  |-
    ----BEGIN CERTIFICATE-----
    MIIEWjxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
    xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
    xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
    -----END CERTIFICATE-----

# Configuration of the cluster image-prunner feature
imageprunner:
  # Enable the cluster image-prunner
  enabled: false
  # Cron formated scheduler
  schedule: "15 * * * *"
  # History limits for logs retention
  history: 
    # History limit for failing run
    failed: 5
    # History limit for successfull run
    successful: 5
  # Suspend the image prunning
  suspend: true

# Configuration of the external registry route
registryroute:
  # Enable the cluster registry route
  enabled: false
  # Name of the route (default is external)
  name: "external"
  # Namespace for the route (default is openshift-image-registry)
  namespace: "openshift-image-registry"

# Configuration of the internal registry
registryconfig:
  # Enable the configuration of the registryconfig
  enabled: false
  # Enable the configuration of the ingresscontroller service into infra nodes
  infra_enabled: false
  # Number of replicas for the deployed registry (default is 1)
  replicas: 1
  # The httpSecret used (default is null)
  # httpSecret: d9a012ccd117b1e6616ceccb2c3bb66a5fed1b5e481623
  # Enable the configuration of the S3 backend storage
  s3Storage: false
  # Define the S3 bucket to use for configuration
  s3Bucket: "image-registry-us-east-1-c92e88cad85b48ec8b312344dff03c82-392c"
  # Define the S3 Region to use (default is us-east-1)
  s3Region: "eu-west-3"
  # # Define the S3 Region endpoint to use (default is none)
  # s3RegionEndpoint: ""
  # # Define the S3 Virtual Hosted Style to use (default is none)
  # s3VirtualHostedStyle: ""
  # Create the secret with S3 credentials (default is false)
  s3StorageEnableSecret: false
  # Set the AWS S3 access key credentials (default is myaccesskey)
  s3BucketAccessKey: minio
  # Set the AWS S3 secret key credentials (default is mysecretkey)
  s3BucketSecretKey: minio123
  # Enable the configuration of the pvc backend storage
  pvcStorage: false
  # Define the pvc Name to use for configuration
  pvcName: "image-registry-storage"

# Configuration of the ingresscontroller
ingresscontroller:
  # Enable the configuration of the ingresscontroller
  enabled: false
  # Define the list of ingressController to manage
  list: []
  #   # Name of the created ingresscontroller
  # - name: default
  #   # The domain suffix to manage
  #   domain: example.com
  #   # The label name for routeSelection
  #   routeSelectorKey: mylabel
  #   # The label value for routeSelection
  #   routeSelectorValue: myvalue
  #   # The label name for namespaceSelection
  #   nsSelectorKey: mylabel
  #   # The label value for namespaceSelection
  #   nsSelectorValue: myvalue
  #   # Enable the configuration of the ingresscontroller service into infra nodes
  #   infra_enabled: false
  #   # The node label values for nodeSelector
  #   nodeSelector: 
  #     machine.startx.io/group: public
  #   # The list of tolerations rules
  #   tolerations:
  #     list:
  #     - key: "env.example.com"
  #       operator: "Equal"
  #       value: "demo"
  #       effect: "NoSchedule"
  #   # Define the load balancer mode (internal or external)
  #   loadBalancerMode: "external"
  #   # Number of replicas to use for this ingress controller
  #   replicas: 2
  #   # Managing the certificate used by the ingresscontroller
  #   certificate: 
  #     # Enable creation of the secret with certificate
  #     enabled: true
  #     # CA bundle used by ingresscontroller (Raw, must be base64 encoded)
  #     CABundleRaw:  |-
  #       LS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJRVdqeHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4
  #       eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eAp4eHh4eHh4eHh4eHh4eHh4eHh4eHh4
  #       eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4Cnh4eHh4eHh4eHh4eHh4
  #       eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHgKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tL
  #     # CA bundle used by ingresscontroller (will be base64 encoded by the template)
  #     CABundle:  |-
  #       ----BEGIN CERTIFICATE-----
  #       MIIEWjxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
  #       xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
  #       xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
  #       -----END CERTIFICATE-----
  #     # Private key used by ingresscontroller (Raw, must be base64 encoded)
  #     privateKeyRaw: |-
  #       LS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJRVdqeHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4
  #       eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eAp4eHh4eHh4eHh4eHh4eHh4eHh4eHh4
  #       eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4Cnh4eHh4eHh4eHh4eHh4
  #       eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHgKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tL
  #     # Private key used by ingresscontroller (will be base64 encoded by the template)
  #     privateKey: |-
  #       -----BEGIN RSA PRIVATE KEY-----
  #       MIIJKAyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy
  #       yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy
  #       -----END RSA PRIVATE KEY-----


# Configuration of the cluster project-template feature
projecttemplate:
  # Enable the cluster image-prunner
  enabled: false
  # Configure RBAC applied to new projects
  rbac: 
    # Enable RBAC default for new projects
    enabled: true
  # Configure network-policy applied to new projects
  networkpolicy: 
    # Enable network-policy default for new projects
    enabled: true

# Configuration of cluster config for redhat tools
redhat:
  # Enable redhat operator namespace
  operators: false

# Configuration of cluster config for opentracing tools
tracing:
  # Enable opentracing operator namespace
  operators: false

# Configuration of the cluster-version feature
helm_reposistory:
  # Enable the cluster-version
  enabled: false
  # Define the related channel
  list: []
  #   # Name of the helm chart repository
  # - name: startx
  #   # URL: of the helm chart repository
  #   url: https://helm-repository.readthedocs.io/en/latest/repos/stable


# Configuration of a bunch of priorityClass ressources
priorityClass:
  # Enable the priorityClass clreation
  enabled: false
  # Define the priorityClass content
  list: []
  #   # Name of the priorityClass
  # - name: high-priority-nonpreempting
  #   # Order of the priorityClass among all (default is 0)
  #   value: 1000000
  #   # Description of the purpose of your priorityClass
  #   description: "This priority class will not cause other pods to be preempted."
  #   # Set to Never if pod part of this priorityClass could not preemt other pods (default is PreemptLowerPriority)
  #   preemptionPolicy: Never
  #   # set to true only for one priorityClass that will become the default one
  #   default: false


# Configuration of the project (see https://helm-repository.readthedocs.io/en/latest/charts/project)
project: 
  enabled: false
  context: 
    <<: *context
  project: 
    enabled: true
    hooked: false
    type: project
    name: "startx-config"
    display_name: "Startx Config"
    requester: startx
    description: Startx default cluster configuration


# Configuration of the elasticSearch operator (see https://helm-repository.readthedocs.io/en/latest/charts/operator)
operatorElastic:
  enabled: false
  context: 
    <<: *context
  subscription:
    enabled: true
    hooked: false
    name: "elasticsearch-operator"
    namespace: "openshift-operators-redhat"
    version: "5.8.0"
    operator: 
      channel: "stable"
      name: elasticsearch-operator
      installPlanApproval: Automatic
      # csv: elasticsearch-operator
      source: 
        name: redhat-operators
        namespace: openshift-marketplace
  operatorGroup:
    enabled: true
    hooked: false
    target: "all-ns"
    name: "elasticsearch-operator"
    namespace: "openshift-operators-redhat"
    providedAPIs: "Elasticsearch.v1.logging.openshift.io,Kibana.v1.logging.openshift.io"


# Configuration of the SosReport project (see https://helm-repository.readthedocs.io/en/latest/charts/project)
projectSosReport: 
  enabled: false
  context: 
    <<: *context
  project: 
    enabled: true
    hooked: false
    type: project
    name: "openshift-startx-sosreport"
    display_name: "Startx SosReport"
    requester: startx
    description: Startx SOS Report area


# Configuration of the sosreport operator (see https://helm-repository.readthedocs.io/en/latest/charts/operator)
operatorSosReport:
  enabled: false
  context: 
    <<: *context
  subscription:
    enabled: true
    hooked: false
    name: "sosreport-operator"
    namespace: "openshift-operators"
    version: "v0.0.2"
    operator: 
      channel: "alpha"
      name: sosreport-operator
      installPlanApproval: Automatic
      # csv: sosreport-operator
      source: 
        name: community-operators
        namespace: openshift-marketplace
  operatorGroup:
    enabled: true
    hooked: false
    target: "all-ns"
    name: "sosreport-operator"
    namespace: "openshift-operators"
    providedAPIs: "Sosreport.v1alpha1.support.openshift.io"

# Configuration of the globals operators (see https://helm-repository.readthedocs.io/en/latest/charts/operator)
operatorGlobal:
  enabled: false
  context: 
    <<: *context
  subscription:
    enabled: false
    hooked: false
  operatorGroup:
    enabled: true
    hooked: false
    target: "all-ns"
    name: "global-operators"
    namespace: "openshift-operators"
    providedAPIs: "AppProject.v1alpha1.argoproj.io,Application.v1alpha1.argoproj.io,ApplicationSet.v1alpha1.argoproj.io,ArgoCD.v1alpha1.argoproj.io,GitopsService.v1alpha1.pipelines.openshift.io,Config.v1alpha1.operator.tekton.dev,ImageManifestVuln.v1alpha1.secscan.quay.redhat.com,Jaeger.v1.jaegertracing.io,Kiali.v1alpha1.kiali.io,MonitoringDashboard.v1alpha1.monitoring.kiali.io,ServiceMeshControlPlane.v2.maistra.io,ServiceMeshMember.v1.maistra.io,ServiceMeshMemberRoll.v1.maistra.io"
