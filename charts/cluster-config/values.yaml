# Default values for cluster-config.

# Application deployment context
context: &context
  # Name of the global scope for this application (organisational tenant)
  scope: myscope
  # Name of the cluster running this application (plateform tenant)
  cluster: default
  # Name of the environement for this application (ex: dev, factory, preprod or prod)
  environment: myenv
  # Component name of this application (logical tenant)
  component: mycomponent
  # Application name (functionnal tenant, default use Chart name)
  app: default-config
  # Version name of this application (default use Chart appVersion)
  # version: "0.0.3"

# Configuration of the cluster auto-scaling feature
autoscaling:
  # Enable the cluster auto-scaling
  enabled: false
  # Define the minimum
  min: 
    # Minimum cores accross cluster
    cores: 4
    # Minimum gigabytes of memory accross cluster
    memory: 16
    # Minimum numbers of nodes
    nodes: 2
  # Define the maximum
  max: 
    # Maximum cores accross cluster
    cores: 40
    # Maximum gigabytes of memory accross cluster
    memory: 160
    # Maximum numbers of nodes
    nodes: 20
  # Enable scale down feature
  scaleDown: true


# Configuration of the cluster-version feature
clusterversion:
  # Enable the cluster-version
  enabled: false
  # Define the related channel
  channel: candidate
  # The clusterID used in clusterversion resource
  clusterID: "xxxxx-xxxx-xxxxxx"
  # Define the maximum
  version: "4.12"
  # Define the targeted applyed version (if cluster update are managed in a gitops way)
  desiredVersion: 4.12.0

# Configuration of the cluster alert-manager feature
alertmanager:
  # Enable the cluster alert-manager
  enabled: false
  # Define the related channel
  receiverName: PagerDutyStartx
  # Define the type of alert receiver (pagerDutty or api)
  type: pagerDutty
  # PagerDutty specific params
  pagerDutty:
    # PagerDutty application key
    key: _pager_dutty_key_
  # API specific params
  api:
    # API endpoint for receiver
    endpoint: _api_endpoint_

# Configuration of the cluster monitoring feature
monitoring:
  # Enable the cluster monitoring personnalisation
  enabled: false
  # Enable the deployment of the logging service into infra nodes
  infra_enabled: false
  # Define the storage class to use for persistance (default is gp3-csi)
  storageClass: gp3-csi
  # Define the storage size to use for persistance (default is 20Gi)
  storageSize: "20Gi"
  # Enabling monitoring for user-defined projects (see https://docs.openshift.com/container-platform/4.12/monitoring/enabling-monitoring-for-user-defined-projects.html)
  enableUserWorkload: true
  # Define the prometheus retention period (default is 7d)
  retentionPeriod: 7d

# Configuration of the cluster image-prunner feature
imageprunner:
  # Enable the cluster image-prunner
  enabled: false
  # Cron formated scheduler
  schedule: "15 * * * *"
  # History limits for logs retention
  history: 
    # History limit for failing run
    failed: 5
    # History limit for successfull run
    successful: 5
  # Suspend the image prunning
  suspend: true

# Configuration of the external registry route
registryroute:
  # Enable the cluster image-prunner
  enabled: false
  # Name of the route (default is external)
  name: "external"
  # Namespace for the route (default is openshift-image-registry)
  namespace: "openshift-image-registry"

# Configuration of the internal registry
registryconfig:
  # Enable the configuration of the registryconfig
  enabled: false
  # Enable the configuration of the ingresscontroller service into infra nodes
  infra_enabled: true

# Configuration of the ingresscontroller
ingresscontroller:
  # Enable the configuration of the ingresscontroller
  enabled: false
  # Define the list of ingressController to manage
  list: []
  #   # Name of the created ingresscontroller
  # - name: default
  #   # The domain suffix to manage
  #   domain: example.com
  #   # The label name for routeSelection
  #   routeSelectorKey: mylabel
  #   # The label value for routeSelection
  #   routeSelectorValue: myvalue
  #   # The node label value for machine.startx.io/group
  #   nodeSelector: public
  #   # Enable the configuration of the ingresscontroller service into infra nodes
  #   infra_enabled: true
  #   # Define the load balancer mode (internal or external)
  #   loadBalancerMode: "external"
  #   # Number of replicas to use for this ingress controller
  #   replicas: 2


# Configuration of the cluster project-template feature
projecttemplate:
  # Enable the cluster image-prunner
  enabled: false
  # Configure RBAC applied to new projects
  rbac: 
    # Enable RBAC default for new projects
    enabled: true
  # Configure network-policy applied to new projects
  networkpolicy: 
    # Enable network-policy default for new projects
    enabled: true

# Configuration of cluster config for redhat tools
redhat:
  # Enable redhat operator namespace
  operators: false

# Configuration of cluster config for opentracing tools
tracing:
  # Enable opentracing operator namespace
  operators: false

# Configuration of the cluster-version feature
helm_reposistory:
  # Enable the cluster-version
  enabled: false
  # Define the related channel
  list: []
  #   # Name of the helm chart repository
  # - name: startx
  #   # UR: of the helm chart repository
  #   url: https://helm-repository.readthedocs.io/en/latest/packages


# Configuration of the project (see https://helm-repository.readthedocs.io/en/latest/charts/project)
project: 
  enabled: false
  context: 
    <<: *context
  project: 
    enabled: true
    hooked: false
    type: project
    name: "startx-config"
    display_name: "Startx Config"
    requester: startx
    description: Startx default cluster configuration


# Configuration of the elasticSearch operator (see https://helm-repository.readthedocs.io/en/latest/charts/operator)
operatorElastic:
  enabled: false
  context: 
    <<: *context
  subscription:
    enabled: true
    hooked: false
    name: "elasticsearch-operator"
    namespace: "openshift-operators-redhat"
    version: "5.7.4"
    operator: 
      channel: "stable"
      name: elasticsearch-operator
      installPlanApproval: Automatic
      # csv: elasticsearch-operator
      source: 
        name: redhat-operators
        namespace: openshift-marketplace
  operatorGroup:
    enabled: true
    hooked: false
    target: "all-ns"
    name: "elasticsearch-operator"
    namespace: "openshift-operators-redhat"
    providedAPIs: "Elasticsearch.v1.logging.openshift.io,Kibana.v1.logging.openshift.io"


# Configuration of the SosReport project (see https://helm-repository.readthedocs.io/en/latest/charts/project)
projectSosReport: 
  enabled: false
  context: 
    <<: *context
  project: 
    enabled: true
    hooked: false
    type: project
    name: "openshift-startx-sosreport"
    display_name: "Startx SosReport"
    requester: startx
    description: Startx SOS Report area


# Configuration of the sosreport operator (see https://helm-repository.readthedocs.io/en/latest/charts/operator)
operatorSosReport:
  enabled: true
  context: 
    <<: *context
  subscription:
    enabled: true
    hooked: false
    name: "sosreport-operator"
    namespace: "openshift-operators"
    version: "v0.0.2"
    operator: 
      channel: "alpha"
      name: sosreport-operator
      installPlanApproval: Automatic
      # csv: sosreport-operator
      source: 
        name: community-operators
        namespace: openshift-marketplace
  operatorGroup:
    enabled: true
    hooked: false
    target: "all-ns"
    name: "sosreport-operator"
    namespace: "openshift-operators"
    providedAPIs: "Sosreport.v1alpha1.support.openshift.io"


# Configuration of the MustGather project (see https://helm-repository.readthedocs.io/en/latest/charts/project)
projectMustGather: 
  enabled: true
  context: 
    <<: *context
  project: 
    enabled: true
    hooked: false
    type: project
    name: "openshift-startx-mustgather"
    display_name: "Startx MustGather"
    requester: startx
    description: Startx Must Gather area


# Configuration of the mustgather operator (see https://helm-repository.readthedocs.io/en/latest/charts/operator)
operatorMustGather:
  enabled: true
  context: 
    <<: *context
  subscription:
    enabled: true
    hooked: false
    name: "must-gather-operator"
    namespace: "openshift-startx-mustgather"
    version: "v1.1.2"
    operator: 
      channel: "alpha"
      name: must-gather-operator
      installPlanApproval: Automatic
      # csv: must-gather-operator
      source: 
        name: community-operators
        namespace: openshift-marketplace
  operatorGroup:
    enabled: true
    hooked: false
    target: "all-ns"
    name: "must-gather-operator"
    namespace: "openshift-startx-mustgather"
    providedAPIs: "MustGather.v1alpha1.redhatcop.redhat.io"


# Configuration of the globals operators (see https://helm-repository.readthedocs.io/en/latest/charts/operator)
operatorGlobal:
  enabled: true
  context: 
    <<: *context
  subscription:
    enabled: false
    hooked: false
  operatorGroup:
    enabled: true
    hooked: false
    target: "all-ns"
    name: "global-operators"
    namespace: "openshift-operators"
    providedAPIs: "AppProject.v1alpha1.argoproj.io,Application.v1alpha1.argoproj.io,ApplicationSet.v1alpha1.argoproj.io,ArgoCD.v1alpha1.argoproj.io,GitopsService.v1alpha1.pipelines.openshift.io,Config.v1alpha1.operator.tekton.dev,ImageManifestVuln.v1alpha1.secscan.quay.redhat.com,Jaeger.v1.jaegertracing.io,Kiali.v1alpha1.kiali.io,MonitoringDashboard.v1alpha1.monitoring.kiali.io,ServiceMeshControlPlane.v2.maistra.io,ServiceMeshMember.v1.maistra.io,ServiceMeshMemberRoll.v1.maistra.io"
