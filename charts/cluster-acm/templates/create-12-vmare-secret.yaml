{{- if .Values.create }}{{- if .Values.create.enabled }}
{{- $namespace := .Values.project.project.name | default "createdcluster" -}}
{{- $name := .Values.create.name | default "default" -}}
---
apiVersion: v1
kind: Secret
type: Opaque
metadata:
  name: "{{- $name -}}-cred-vcenter"
  namespace: "{{- $namespace -}}"
  labels:
    {{- include "cluster-acm.labels" . | nindent 4 }}
    app.kubernetes.io/name: "{{- $name -}}-pull-secret"
    cloud: '{{ .Values.create.labels.cloud }}'
    vendor: '{{ .Values.create.labels.vendor }}'
    iaas: '{{ .Values.create.labels.iaas }}'
    paas: '{{ .Values.create.labels.paas }}'
    caas: '{{ .Values.create.labels.caas }}'
    cluster.open-cluster-management.io/credentials: ''
    cluster.open-cluster-management.io/type: vmw
  annotations:
    {{- include "cluster-acm.annotations" . | nindent 4 }}
    {{- if .Values.create.hooked }}
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-weight: "8"
    helm.sh/hook-delete-policy: hook-failed
    argocd.argoproj.io/hook: PostSync
    argocd.argoproj.io/hook-delete-policy: HookFailed
    {{- end }}
    argocd.argoproj.io/sync-wave: "8"
stringData:
  vCenter: myvcenter.internal
  username: myvcenterusername
  password: "********"
  cacertificate: |-
    -----BEGIN CERTIFICATE-----
    MIIFVjCCAzXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
    -----END CERTIFICATE-----
  cluster: myclustername
  datacenter: mydatacenter
  defaultDatastore: mydatastore
  vsphereFolder: /mydatacenter/vm/
  vsphereResourcePool: /mydatacenter/host/myclustername/Resources/
  vsphereDiskType: thin
  baseDomain: test.cluster.internal
  pullSecret: "********************"
  ssh-privatekey: "********************"
  ssh-publickey: "********************"
  clusterOSImage: ""
  imageContentSources: ""
  disconnectedAdditionalTrustBundle: ""
  httpProxy: http://proxy.internal
  httpsProxy: https://proxy.internal
  noProxy: google.com,test.com
  additionalTrustBundle: ""
{{- end }}{{- end }}
