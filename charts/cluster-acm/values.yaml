# Default values for cluster-acm.

# Application deployment context
context:  &context
  # Name of the global scope for this application (organisational tenant)
  scope: myscope
  # Name of the cluster running this application (plateform tenant)
  cluster: default
  # Name of the environement for this application (ex: dev, factory, preprod or prod)
  environment: myenv
  # Component name of this application (logical tenant)
  component: mycomponent
  # Application name (functionnal tenant, default use Chart name)
  app: default-acm
  # Version name of this application (default use Chart appVersion)
  # version: "0.0.3"

# configuration of the acm service
acm:
  # Enable the deployment of the acm service
  enabled: true
  # configuration of the multi-cluster Hub
  mch:
    # Enable the deployment of the reporting-operator service
    enabled: true
    # Activate the manager as a helm hook
    hooked: true
    # name of the multiclusterhub
    name: "default-mch"
    # availability config
    availabilityConfig: Basic
    # configuration of the hive service
    hive:
        # Enable the deployment of the hive service
        enabled: true
        # spec of the hive service
        spec: |
          backup:
              velero: {}
          failedProvisionConfig: {}
    # configuration of the ingress service
    ingress:
        # Enable the deployment of the ingress service
        enabled: true
        # spec of the ingress
        spec: |
          sslCiphers:
            - ECDHE-ECDSA-AES256-GCM-SHA384
            - ECDHE-RSA-AES256-GCM-SHA384
            - ECDHE-ECDSA-CHACHA20-POLY1305
            - ECDHE-RSA-CHACHA20-POLY1305
            - ECDHE-ECDSA-AES128-GCM-SHA256
            - ECDHE-RSA-AES128-GCM-SHA256

# configuration to import a cluster into ACM
import:
  # Enable the import cluster
  enabled: false
  # Activate the manager as a helm hook
  hooked: false
  # The name of the cluster to import
  name: importedcluster
  # The name of the namespace to import
  namespace: importedcluster
  # Additionnal labels added to the managed cluster
  labels:
    vendor: OpenShift
    cloud: Amazon
    iaas: aws
    paas: ocp
    caas: ocp
  # Token to use fot the auto-import secret
  token: "mytoken"
  # server to use fot the auto-import secret
  server: "myserver"

# configuration to create a cluster from ACM
create:
  # Enable the import cluster
  enabled: false
  # Activate the manager as a helm hook
  hooked: false
  # The name of the cluster to create
  name: createdcluster
  # The name of the namespace to create
  namespace: createdcluster
  # Configuration of the cluster basics
  config: 
    # Base domain to use for this cluster
    baseDomain: example.com
    # the datacenter region name
    region: eu-west-3
    # Configuration for the master
    master:
      platform: |-
        aws:
          type: t3a.xlarge
          zones:
            - eu-west-3a
            - eu-west-3b
            - eu-west-3c
          rootVolume:
            iops: 200
            size: 200
            type: io1
    # Configuration for the worker
    worker:
      # replicas for workers
      replicas: 3
      platform: |-
        aws:
          type: m5a.2xlarge
          zones:
            - eu-west-3a
            - eu-west-3b
            - eu-west-3c
          rootVolume:
            iops: 500
            size: 250
            type: io1
  # Cluster pull secret user by acm provisionner
  clusterPullSecret: '{"auths":{"fake":{"auth":"aWQ6cGFzcwo="}}}'
  # Additionnal labels added to the managed cluster
  labels:
    vendor: OpenShift
    cloud: Amazon
    iaas: aws
    paas: ocp
    caas: ocp
  # Additionnal labels added to the managed cluster
  aws_creds:
    # AWS key ID used to provision resource required by the provisionned cluster
    access_key_id: myAwsKeyID
    # AWS secret coresponding to the previous key
    secret_access_key: myAwsSecretKey
  # Token to use fot the auto-import secret
  token: "mytoken"
  # server to use fot the auto-import secret
  server: "myserver"

# configuration of the thanos service
observability:
  # Enable the deployment of the thanos service
  enabled: false
  # Enable the deployment of the thanos service on infra nodes
  infra: false
  # Activate the manager as a helm hook
  hooked: false
  # Bucket configuration for the storage backend
  bucket:
    s3bucket: "s3bucket-value"
    s3host: "s3host-value"
    s3accesskey: "s3accesskey-value"
    s3secretkey: "s3secretkey-value"
  # Cluster pull secret user by thanos (used with mco.imagePullSecret in a secret)
  clusterPullSecret: '{"auths":{"fake":{"auth":"aWQ6cGFzcwo="}}}'
  # configuration of the multiClusterObservability
  mco:
    availabilityConfig: "High"
    imagePullPolicy: "Always"
    imagePullSecret: "multiclusterhub-operator-pull-secret"
    observabilityAddonSpec:
      enableMetrics: true
      interval: 60
      # How long to retain samples of 1 hour in bucket
      retentionResolution1h: "30d" 
      # How long to retain samples of 5 minutes in bucket
      retentionResolution5m: "14d"
      # How long to retain samples of raw in bucket
      retentionResolutionRaw: "5d"
      # Specifies the storage to be used by Observability
      storageConfigObject: 
        metricObjectStorage:
          name: thanos-object-storage
          key: thanos.yaml
        # The amount of storage applied to the Observability stateful sets, i.e. Amazon S3 store, Rule, compact and receiver.
        statefulSetSize: "10Gi"
        statefulSetStorageClass: "gp3-csi"

# Configuration of the project (see https://helm-repository.readthedocs.io/en/latest/charts/project)
project: 
  enabled: false
  context: 
    <<: *context
  project: 
    enabled: true
    type: namespace
    name: "open-cluster-management"
    display_name: Operator ACM
    description: ACM operators configured by startx
  rbac: 
    enabled: true
    groups: 
    - id: devops-view
      name: devops
      role: view
    - id: ops-admin
      name: ops
      role: admin
  networkpolicy: 
    enabled: false
  limits: 
    enabled: false
  quotas: 
    enabled: false

# Configuration of the project (see https://helm-repository.readthedocs.io/en/latest/charts/project)
projectObservability: 
  enabled: false
  context: 
    <<: *context
  project: 
    enabled: true
    hooked: false
    type: namespace
    name: "open-cluster-management-observability"
    display_name: ACM Observability
    description: ACM Observability configured by startx
  rbac: 
    enabled: false
  networkpolicy: 
    enabled: false
  limits: 
    enabled: false
  quotas: 
    enabled: false

# Configuration of the operator (see https://helm-repository.readthedocs.io/en/latest/charts/operator)
operator:
  enabled: false
  context: 
    <<: *context
  subscription:
    enabled: true
    name: "advanced-cluster-management"
    namespace: "open-cluster-management"
    version: "v2.6.1"
    operator: 
      channel: "release-2.6"
      name: advanced-cluster-management
      installPlanApproval: Automatic
      # csv: advanced-cluster-management
      source: 
        name: redhat-operators
        namespace: openshift-marketplace
      config:
        infra: false
  operatorGroup:
    enabled: true
    name: "advanced-cluster-management-operator"
    namespace: "open-cluster-management"
    providedAPIs: "Application.v1beta1.app.k8s.io,Channel.v1.apps.open-cluster-management.io,Checkpoint.v1.hive.openshift.io,ClusterClaim.v1.hive.openshift.io,ClusterDeployment.v1.hive.openshift.io,ClusterDeprovision.v1.hive.openshift.io,ClusterImageSet.v1.hive.openshift.io,ClusterManager.v1.operator.open-cluster-management.io,ClusterPool.v1.hive.openshift.io,ClusterProvision.v1.hive.openshift.io,ClusterRelocate.v1.hive.openshift.io,ClusterState.v1.hive.openshift.io,ClusterSync.v1alpha1.hiveinternal.openshift.io,ClusterSyncLease.v1alpha1.hiveinternal.openshift.io,DNSZone.v1.hive.openshift.io,Deployable.v1.apps.open-cluster-management.io,FakeClusterInstall.v1alpha1.hiveinternal.openshift.io,GitOpsCluster.v1alpha1.apps.open-cluster-management.io,GitOpsCluster.v1beta1.apps.open-cluster-management.io,HelmRelease.v1.apps.open-cluster-management.io,HiveConfig.v1.hive.openshift.io,MachinePool.v1.hive.openshift.io,MachinePoolNameLease.v1.hive.openshift.io,MultiClusterHub.v1.operator.open-cluster-management.io,MultiClusterObservability.v1beta1.observability.open-cluster-management.io,MultiClusterObservability.v1beta2.observability.open-cluster-management.io,ObservabilityAddon.v1beta1.observability.open-cluster-management.io,Observatorium.v1alpha1.core.observatorium.io,PlacementRule.v1.apps.open-cluster-management.io,SelectorSyncIdentityProvider.v1.hive.openshift.io,SelectorSyncSet.v1.hive.openshift.io,SubmarinerConfig.v1alpha1.submarineraddon.open-cluster-management.io,Subscription.v1.apps.open-cluster-management.io,SyncIdentityProvider.v1.hive.openshift.io,SyncSet.v1.hive.openshift.io"
