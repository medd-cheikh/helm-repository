
# Default values for configuration of a dev demo
# see values.yaml for explanation on each params
context: 
  scope: startx
  cluster: localhost
  environment: demo
  component: argocd
  app: demo-argocd
  version: "0.0.1"
project: 
  type: project
  name: demo-argocd
  display_name: Demo ARGOCD
  description: Various deployment examples deployed via ArgoCD
rbac: 
  enabled: true
  groups: 
  - id: dev
    name: dev
    role: view
  - id: devops
    name: devops
    role: edit
  - id: ops
    name: ops
    role: admin
  users: 
  - id: argocd-controller-sa
    name: system:serviceaccount:startx-argocd:argocd-application-controller
    role: edit
networkpolicy: 
  enabled: false
  rules: []
limits: 
  enabled: true
  rules:  |
    limits:
      - type: "Pod"
        min:
          cpu: "10m"
          memory: "10Mi"
        max:
          cpu: 1400m
          memory: 1424Mi
      - type: "Container"
        default:
          cpu: 500m
          memory: 512Mi
        defaultRequest:
          cpu: 20m
          memory: 32Mi
        min:
          cpu: "10m"
          memory: "10Mi"
        max:
          cpu: 1000m
          memory: 1024Mi
quotas: 
  enabled: true
  rules:  |
    hard:
      limits.cpu: "3000m"
      limits.memory: "3500Mi"
      requests.cpu: "900m"
      requests.memory: "1600Mi"
      requests.storage: "8Gi"
      persistentvolumeclaims: "8"
      ephemeral-storage: "0" 
      gp2.storageclass.storage.k8s.io/requests.storage: "0Gi"
      gp2.storageclass.storage.k8s.io/persistentvolumeclaims: "0"
      aws-generic-retain.storageclass.storage.k8s.io/requests.storage: "0"
      aws-generic-retain.storageclass.storage.k8s.io/persistentvolumeclaims: "0"
      aws-generic-delete.storageclass.storage.k8s.io/requests.storage: "0"
      aws-generic-delete.storageclass.storage.k8s.io/persistentvolumeclaims: "0"
      aws-fast-retain.storageclass.storage.k8s.io/requests.storage: "0"
      aws-fast-retain.storageclass.storage.k8s.io/persistentvolumeclaims: "0"
      aws-fast-delete.storageclass.storage.k8s.io/requests.storage: "2Gi"
      aws-fast-delete.storageclass.storage.k8s.io/persistentvolumeclaims: "2"
      aws-slow-retain.storageclass.storage.k8s.io/requests.storage: "0"
      aws-slow-retain.storageclass.storage.k8s.io/persistentvolumeclaims: "0"
      aws-slow-delete.storageclass.storage.k8s.io/requests.storage: "6Gi"
      aws-slow-delete.storageclass.storage.k8s.io/persistentvolumeclaims: "6"
      ocs-generic-delete.storageclass.storage.k8s.io/requests.storage: "0"
      ocs-generic-delete.storageclass.storage.k8s.io/persistentvolumeclaims: "0"
      ocs-generic-retain.storageclass.storage.k8s.io/requests.storage: "0"
      ocs-generic-retain.storageclass.storage.k8s.io/persistentvolumeclaims: "0"
      ocs-fs-delete.storageclass.storage.k8s.io/requests.storage: "0"
      ocs-fs-delete.storageclass.storage.k8s.io/persistentvolumeclaims: "0"
      ocs-fs-retain.storageclass.storage.k8s.io/requests.storage: "0"
      ocs-fs-retain.storageclass.storage.k8s.io/persistentvolumeclaims: "0"
      ocs-storagecluster-ceph-rbd.storageclass.storage.k8s.io/requests.storage: "0"
      ocs-storagecluster-ceph-rbd.storageclass.storage.k8s.io/persistentvolumeclaims: "0"
      openshift-storage.noobaa.io.storageclass.storage.k8s.io/requests.storage: "0"
      openshift-storage.noobaa.io.storageclass.storage.k8s.io/persistentvolumeclaims: "0"
      pods: "6"
      services.loadbalancers: "0"
      services.nodeports: "0"
      secrets: "20"
      configmaps: "10"
      replicationcontrollers: "2"
      openshift.io/imagestreams: "3"
      count/daemonsets.apps: "0"
      count/replicasets.apps: "2"
      count/deployments.apps: "4"
      services: "5"
