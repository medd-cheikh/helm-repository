{{- if .Values.cerberus.enabled -}}
{{- $root := . -}}
{{- $appName := include "startx.appName" . -}}
{{- $namespace := .Values.project.project.name -}}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: cerberus-config
  namespace: "{{- $namespace -}}"
  labels:
    app.kubernetes.io/name: "cerberus-config"
    {{- include "chaos-cerberus.labels" $root | nindent 4 }}
  annotations:
    {{- include "chaos-cerberus.annotations" $root | nindent 4 }}
data:
  config.yaml: |
    # read https://github.com/chaos-kubox/cerberus/blob/main/config/config.yaml for full detail of each properties
    cerberus:
        distribution: openshift
        kubeconfig_path: /root/kubeconfig
        port: 8080
        watch_nodes: {{ .Values.cerberus.watch_nodes | default true }}
        watch_cluster_operators: {{ .Values.cerberus.watch_cluster_operators | default true }}
        watch_url_routes: {{ toJson .Values.cerberus.watch_url_routes }}
        watch_master_schedulable:
            enabled: True
            label: node-role.kubernetes.io/master
        watch_namespaces:
        - openshift
        - ^openshift-(?!must-gather.*|debug.*|marketplace.*).*$
        - ^kube-.*$
        # - ^startx-.*$
        cerberus_publish_status: True 
        inspect_components: False
        prometheus_url:
        prometheus_bearer_token:
        slack_integration: False
        watcher_slack_ID:
            Monday:
            Tuesday:
            Wednesday:
            Thursday:
            Friday:
            Saturday:
            Sunday:
        slack_team_alias:
        custom_checks:
          - startx_check.py
    tunings:
        timeout: 10
        iterations: 25
        sleep_time: {{ .Values.cerberus.sleep_time | default 10 }}
        kube_api_request_chunk_size: 500
        daemon_mode: {{ .Values.cerberus.isDaemon | default true }}
        cores_usage_percentage: 0.6
    database:
        database_path: /tmp/cerberus.db
        reuse_database: False
  startx_check.py: |-
    import logging
    import subprocess
    def check_name():
        logging.info("Check if number of Ready nodes is greater than 5\n")
    def check():
        node_count = subprocess.check_output("oc get nodes | grep Ready | wc -l", shell=True, universal_newlines=True)
        return True if int(node_count) > 5 else False
    def main():
        check_name()
        output = check()
        return output
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: cerberus-kubeconfig
  namespace: "{{- $namespace -}}"
  labels:
    app.kubernetes.io/name: "cerberus-kubeconfig"
    {{- include "chaos-cerberus.labels" $root | nindent 4 }}
  annotations:
    {{- include "chaos-cerberus.annotations" $root | nindent 4 }}
data:
{{- if eq .Values.cerberus.kubeconfig.mode "file" }}
  config: |
    {{- .Values.cerberus.kubeconfig.file | nindent 4 }}
{{- end -}}
{{- if eq .Values.cerberus.kubeconfig.mode "token" }}
  config: |
    kind: Config
    apiVersion: v1
    current-context: default
    clusters:
    - name: default
      cluster:
        insecure-skip-tls-verify: true
        server: "{{ .Values.cerberus.kubeconfig.token.server }}"
    users:
    - name: default
      user:
        token: "{{ .Values.cerberus.kubeconfig.token.token }}"
    contexts:
    - name: default
      context:
        cluster: default
        namespace: default
        user: default
    preferences: {}
{{- end }}
{{- end -}}
